<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title><![CDATA[shell--检查apache是否启动]]></title>
      <url>/2017/12/30/shell-%E6%A3%80%E6%9F%A5apache%E6%98%AF%E5%90%A6%E5%90%AF%E5%8A%A8/</url>
      <content type="html"><![CDATA[<p>＃首先我们需要检查apache是否以启动，这里我们用到的说nmap命令，Linux默认情况下是没有安装nmap命令的。</p>
<p>＃那么我们需要安装下nmap，安装的命令很简单：</p>
<blockquote>
<p>yum -y install nmap</p>
</blockquote>
<p>＃###mnap -sT  192.168.1.1这条命令是检测服务器启动了什么服务，192.168.1.1这个为你的服务器的ip地址<br><a id="more"></a><br>＃apache是属于tcp协议的一种，我们先截取出有关tcp协议的服务，再截取http。</p>
<p>＃如果apache是启动的那么这条命令最后的截取结果为open，如果不启动那么截取的就为close</p>
<p>＃以下为脚本的内容</p>
<blockquote>
<p>open=$(mnap -sT  192.168.1.1 ｜grep tcp | grep http |awk ‘{print $2}’)</p>
<p>if [ “$open” == “open” ]</p>
<p>　　then</p>
</blockquote>
<p>＃如果是启动的就把apache启动的消息输出到apache启动日志文件中，正常情况下，应该是发送一份邮件告诉管理员apache是启动的，这里我就简化了</p>
<blockquote>
<p>　　　　echo “$date  The http is OK !!!”&gt;&gt;/tmp/httpd_acc.log</p>
</blockquote>
<p>　　else</p>
<p>＃如果是关闭的就启动下apache服务，并把启动成功的消息输出到apache关闭的日志文件中</p>
<blockquote>
<p>　　　　/var/rc.d/init.d/httpd restart $&gt;/dev/null</p>
<p>　　　　echo “$date The httpd  restart success !!! “&gt;&gt;/tmp/httpd_err.log</p>
<p>fi</p>
</blockquote>
<p>＃在正常情况下，每个服务器每15分钟必须检查一下apache是否启动，那么我们可以与crontab定时任务命令结合起来执行这个脚本。</p>
]]></content>
      
        
        <tags>
            
            <tag> shell </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[shell--apache日志分割脚本]]></title>
      <url>/2017/12/28/Linux-apache%E6%97%A5%E5%BF%97%E5%88%86%E5%89%B2%E8%84%9A%E6%9C%AC/</url>
      <content type="html"><![CDATA[<p>#!/bin/bash</p>
<p>#这里是以一天为单位的日志分割</p>
<p>#记录下当天的日期</p>
<blockquote>
<p>date=date -d yesterday +% Y%m%d<br><a id="more"></a></p>
<p>#切换到apache的日志文件</p>
<p>#在这里需要明确的知道你自己的apache的日志存放在那个目录下，避免找不到apache日志存放目录<br>old=/usr/local/apache2/logs/access_log</p>
<p>#分割后的存放目录，一般情况下，为了美观，分割后的日志不会存放在跟原本的目录下。<br>mkdir -p /usr/local/apache2/logsback<br>old=/usr/local/apache/logsback/access_($date).log</p>
<p>#把日志分割<br>mv $old $new</p>
<p>#把apache挂起（目的是为了重新生成新的access_log日志文件）<br>pkill -l httpd<br>＃脚本写完后，那么我们就需要结合crontab －e命令每天凌晨12点执行该脚本</p>
</blockquote>
]]></content>
      
        
        <tags>
            
            <tag> shell </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Linux搭建postfix邮件服务器]]></title>
      <url>/2017/12/28/Linux%E6%90%AD%E5%BB%BApostfix%E9%82%AE%E4%BB%B6%E6%9C%8D%E5%8A%A1%E5%99%A8/</url>
      <content type="html"><![CDATA[<p>1.修改主机名和部署DNS服务器</p>
<blockquote>
<p>[root@mail ~]# hostname<br>mail.disanzu.com</p>
</blockquote>
<p>部署DNF服务器可以参考我的另一篇安装DNS服务器的博客</p>
<blockquote>
<p><a href="http://blog.csdn.net/lin_haobin/article/details/73252815" target="_blank" rel="noopener">http://blog.csdn.net/lin_haobin/article/details/73252815</a><br><a id="more"></a><br>2.安装postfix服务器<br>[root@mail ~]# yum -y install postfix</p>
</blockquote>
<p>3.修改postfix配置文件</p>
<blockquote>
<p>[root@mail ~]# vim  /etc/postfix/main.cf    </p>
</blockquote>
<p>修改以下内容</p>
<blockquote>
<p>myhostname = 你的邮件域名</p>
</blockquote>
<p>设置服务器主机名</p>
<blockquote>
<p>mydomain = 你的域名  </p>
</blockquote>
<p>设置服务器的域名</p>
<blockquote>
<p>myorigin = $mydomain</p>
</blockquote>
<p>定义寄出邮件的域</p>
<blockquote>
<p>inet_interfaces = all</p>
</blockquote>
<p>指定要由服务器的哪些地址对外提供电子邮件服务</p>
<blockquote>
<p>mydestination = $myhostname, $mydomain<br>修改完后保存退出</p>
</blockquote>
<p>重启下postfix服务器</p>
<blockquote>
<p>systemctl restart postfix.service</p>
</blockquote>
<p>4.安装dovecot服务程序</p>
<blockquote>
<p>[root@mail ~]# yum -y install dovecot</p>
</blockquote>
<p>5.修改dovecot主配置文件</p>
<blockquote>
<p>[root@mail ~]# vim /etc/dovecot/dovecot.conf </p>
</blockquote>
<p>更改以下几点<br>设置支持的电子邮件协议</p>
<blockquote>
<p>protocols = imap pop3 lmtp</p>
</blockquote>
<p>允许用户明文登录（这一条需要自己手动添加）</p>
<blockquote>
<p>disable_plaintext_auth = no</p>
</blockquote>
<p>这里的IP为网络为即192.168.10.0/24</p>
<blockquote>
<p>login_trusted_networks = 服务器ip/24</p>
</blockquote>
<p>6.修改dovecot子配置文件<br>定义接受到邮件保存到服务器的哪个目录下</p>
<blockquote>
<p>[root@mail ~]# vim /etc/dovecot/conf.d/10-mail.conf<br>mail_location = mbox:~/mail:INBOX=/var/mail/%u</p>
</blockquote>
<p>更改完后重启下程序</p>
<blockquote>
<p>systemctl restart dovecot</p>
</blockquote>
<p>7.创建邮件用户，并创建存放目录</p>
<blockquote>
<p>[root@mail ~]# useradd text<br>[root@mail ~]#su - text<br>[text@mail ~]$ mkdir -p mail/.imap/INBOX/<br>[text@mail ~]$ su - root</p>
</blockquote>
<p>8.发送邮件<br>发送邮件   “mail”是这封邮件的名称</p>
<blockquote>
<p>[root@mail ~]# echo “this is a mail “ |mail -s “mail”  text@disanzu.com</p>
</blockquote>
<p>9.验证邮件</p>
<blockquote>
<p>[root@mail ~]# su - text<br>[text@mail ~]$ mail<br>Heirloom Mail version 12.4 7/29/08.  Type ? for help.<br>“/var/spool/mail/text”: 6 messages 6 new<br>N  1 root                  Thu Jun 15 16:43  22/777   “ass”<br> N  2 root                  Thu Jun 15 16:43  22/777   “ass”<br> N  3 root                  Thu Jun 15 16:44  22/798   “text mail”<br> N  4 root                  Thu Jun 15 16:44  22/798   “text mail”<br> N  5 root                  Thu Jun 15 16:44  22/799   “text mail”<br> N  6 root                  Thu Jun 15 16:57  22/790   “mail”<br>&amp; 6<br>Message  6:<br>From root@mail.disanzu.com  Thu Jun 15 16:57:48 2017<br>Return-Path: <a href="&#109;&#x61;&#x69;&#108;&#116;&#x6f;&#58;&#x72;&#111;&#x6f;&#x74;&#x40;&#109;&#97;&#x69;&#x6c;&#46;&#100;&#x69;&#115;&#97;&#110;&#x7a;&#117;&#46;&#99;&#x6f;&#109;">&#x72;&#111;&#x6f;&#x74;&#x40;&#109;&#97;&#x69;&#x6c;&#46;&#100;&#x69;&#115;&#97;&#110;&#x7a;&#117;&#46;&#99;&#x6f;&#109;</a><br>X-Original-To: text@disanzu.com<br>Delivered-To: text@disanzu.com<br>From: root <a href="&#x6d;&#x61;&#x69;&#108;&#x74;&#111;&#58;&#x72;&#111;&#111;&#116;&#64;&#x6d;&#97;&#105;&#108;&#x2e;&#100;&#x69;&#115;&#x61;&#110;&#122;&#117;&#x2e;&#99;&#x6f;&#109;">&#x72;&#111;&#111;&#116;&#64;&#x6d;&#97;&#105;&#108;&#x2e;&#100;&#x69;&#115;&#x61;&#110;&#122;&#117;&#x2e;&#99;&#x6f;&#109;</a><br>Date: Thu, 15 Jun 2017 16:57:48 -0400<br>To: text@disanzu.com<br>Subject: mail<br>User-Agent: Heirloom mailx 12.4 7/29/08<br>Content-Type: text/plain; charset=us-ascii<br>Status: R</p>
<p>this is a mail </p>
<p>&amp; </p>
</blockquote>
]]></content>
      
        
        <tags>
            
            <tag> linux </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[MySQL主从复制原理及搭建]]></title>
      <url>/2017/12/28/MySQL%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6%E5%8E%9F%E7%90%86%E5%8F%8A%E6%90%AD%E5%BB%BA/</url>
      <content type="html"><![CDATA[<p>###一、MySQL主从复制原理</p>
<blockquote>
<p>mysql支持单向、异步复制，复制过程中一个服务器充当主服务器，而一个或多个其它服务器充当从服务器。mysql复制基于主服务器在二进制日志中跟踪所有对数据库的更改(更新、删除等等)。因此，要进行复制，必须在主服务器上启用二进制日志。每个从服务器从主服务器接收主服务器已经记录到其二进制日志的保存的更新。当一个从服务器连接主服务器时，它通知主服务器从服务器在日志中读取的最后一次成功更新的位置。从服务器接收从那时起发生的任何更新，并在本机上执行相同的更新。然后封锁并等待主服务器通知新的更新。从服务器执行备份不会干扰主服务器，在备份过程中主服务器可以继续处理更新。<br><a id="more"></a></p>
<p>###二、MySQL主从复制搭建</p>
</blockquote>
<p>一.工作环境及条件</p>
<pre><code>&gt;主数据库：172.25.0.254
从数据库：172.25.0.11
操作系统：RHRL7
MySQL版本：mariadb-5.5.35
</code></pre><p> 安装MYSQL(yum源安装)<br>主数据库</p>
<pre><code>&gt;    [root@master ~]# yum clean all
    [root@master ~]# yum -y install mariadb*
</code></pre><p>从数据库</p>
<pre><code>&gt;[root@slave ~]# yum clean all
</code></pre><p>开启mariadb服务</p>
<blockquote>
<pre><code>[root@master ~]# systemctl start mariadb 
 [root@slave ~]# systemctl start mariadb
</code></pre></blockquote>
<p>关闭防火墙（或者开发防火墙的mysql服务和3306端口）</p>
<blockquote>
<pre><code>[root@master ~]# systemctl stop firewalld.service 
 [root@slave ~]# systemctl stop firewalld.service 
</code></pre></blockquote>
<p>####二.mysql主从复制配置方法</p>
<p>1.主数据库<br>修改主库my.cnf主要设置个不一样的ID，以及同步的数据库的名字和端口号（默认为3306）</p>
<blockquote>
<p>[root@slave ~]# vim /etc/my.cnf<br>        在[mysqld]中加入内容如下<br>    server-id=1<br>    log-bin=lhb<br>    port=3306</p>
</blockquote>
<p>重启服务使配置生效</p>
<blockquote>
<p>[root@master ~]# systemctl restart mariadb</p>
</blockquote>
<p> 设置mysql登录密码（默认情况下登录密码为空）</p>
<blockquote>
<p>[root@master ~]# mysqladmin -uroot password ‘123456’</p>
</blockquote>
<p>登录主库赋予从库权限账号，允许用户在主库上读取日志(用户名：admin，密码：123456）</p>
<blockquote>
<p>[root@master ~]# mysql -uroot -p123456</p>
</blockquote>
<p>进入mysql里面输入</p>
<blockquote>
<pre><code>MariaDB [(none)]&gt; grant replication slave on *.* to &apos;admin&apos;@&apos;172.25.0.254&apos; identified by &apos;123456&apos;;
</code></pre></blockquote>
<p>为验证账号我们可以在从的机器上用命令作如下测试</p>
<blockquote>
<pre><code>[root@slave ~]# mysql -uadmin -p123456 -h 172.25.0.11
</code></pre></blockquote>
<p>显示主数据看的信息</p>
<blockquote>
<p>MariaDB [(none)]&gt; show master status;<br>    +————+———-+————–+——————+<br>    | File       | Position | Binlog_Do_DB | Binlog_Ignore_DB |<br>    +————+———-+————–+——————+<br>    | lhb.000001 |      537 |              |                  |<br>    +————+———-+————–+——————+<br>    1 row in set (0.00 sec)</p>
</blockquote>
<pre><code>（记录File、Position的值，设置从数据库的时候会用到）
</code></pre><p>2.从数据库</p>
<blockquote>
<p>修改从数据库的my.cnf，在[mysqld]如下:<br>server-id=2</p>
</blockquote>
<p>重启下数据库</p>
<blockquote>
<p>[root@slave ~]# systemctl restart mariadb</p>
</blockquote>
<p>设置mysql登录密码（默认情况下登录密码为空）</p>
<blockquote>
<p>[root@slave ~]# mysqladmin -uroot password ‘123456’</p>
</blockquote>
<p> 登录数据库</p>
<blockquote>
<p>[root@slave ~]# mysql -uroot -p123456    </p>
</blockquote>
<p>在从数据库上设置同步</p>
<blockquote>
<p>MariaDB [(none)]&gt; slave stop;<br>    Query OK, 0 rows affected, 1 warning (0.00 sec)<br>MariaDB [(none)]&gt; change master to master_host=’172.25.0.11’,master_user=’admin’,master_password=’123456’,master_log_file=’lhb.000001’,master_log_pos=537;<br>    Query OK, 0 rows affected (0.03 sec)</p>
<p>   这里的lhb.000001和537为主数据库的master status)<br>MariaDB [(none)]&gt; slave start;<br>    Query </p>
<p>MariaDB [(none)]&gt; show slave status\G;</p>
</blockquote>
<p>看到以下两行为Yes,表示成功了</p>
<blockquote>
<p>Slave_IO_Running: Yes<br>Slave_SQL_Running: Yes</p>
</blockquote>
<p>假如你的Slave_IO_Running:Connecting或者No<br>那么可能出现以下几点问题：</p>
<blockquote>
<p>   1.主从两个数据库不通。<br>    2.server-id设置错误。<br>    3.position设置错误。<br>    4.防火墙没关闭或者没开放mysql端口。</p>
</blockquote>
<p>3.测试<br>在主数据库上新建数据库，看看是否会同步。<br>主数据库上：</p>
<blockquote>
<p>MariaDB [(none)]&gt; show databases;<br>    +——————–+<br>    | Database           |<br>    +——————–+<br>    | information_schema |<br>    | mysql              |<br>    | performance_schema |<br>    | test               |<br>    +——————–+<br>    4 rows in set (0.01 sec)</p>
</blockquote>
<p>从数据库上：</p>
<blockquote>
<p>MariaDB [(none)]&gt; show databases;<br>    +——————–+<br>    | Database           |<br>    +——————–+<br>    | information_schema |<br>    | mysql              |<br>     | performance_schema |<br>    | test               |<br>    +——————–+<br>    4 rows in set (0.01 sec)</p>
</blockquote>
<p>主数据库上创建数据库并查看</p>
<blockquote>
<p>MariaDB [(none)]&gt; create database lhbdb;<br>    Query OK, 1 row affected (0.00 sec)</p>
</blockquote>
<p>MariaDB [(none)]&gt; show databases;<br>    +——————–+<br>    | Database           |<br>    +——————–+<br>    | information_schema |<br>    | lhbdb              |<br>    | mysql              |<br>    | performance_schema |<br>    | test               |<br>    +——————–+<br>    5 rows in set (0.00 sec)</p>
<p>从库上查看是否同步</p>
<blockquote>
<p>MariaDB [(none)]&gt; show databases;<br>    +——————–+<br>    | Database           |<br>    +——————–+<br>    | information_schema |<br>    | lhbdb              |<br>    | mysql              |<br>    | performance_schema |<br>    | test               |<br>    +——————–+<br>    5 rows in set (0.01 sec)</p>
</blockquote>
<p>由此可以看到在主数据库上建立数据库lhbdb,则表示成功了^<em>^^</em>^^_^</p>
]]></content>
      
        
        <tags>
            
            <tag> Mysql </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[MySQL主主复制原理及搭建]]></title>
      <url>/2017/12/28/MySQL%E4%B8%BB%E4%B8%BB%E5%A4%8D%E5%88%B6%E5%8E%9F%E7%90%86%E5%8F%8A%E6%90%AD%E5%BB%BA/</url>
      <content type="html"><![CDATA[<p>一、原理</p>
<blockquote>
<p>MySQL两台服务器上面的任何一个数据库发生改变，都会同步到另一台服务器上面去。</p>
</blockquote>
<p>二、环境搭建</p>
<a id="more"></a>
<blockquote>
<p>主数据库1(master1)：172.25.0.254<br>主数据库2(master2)：172.25.0.11<br>操作系统：RHRL7<br>MySQL版本：mariadb-5.5.35</p>
</blockquote>
<p>安装MYSQL(yum源安装)</p>
<p>master1</p>
<blockquote>
<p>[root@master1 ~]# yum clean all<br>[root@master1 ~]# yum -y install mariadb*</p>
</blockquote>
<p>master2</p>
<blockquote>
<p>[root@master2 ~]# yum clean all<br>[root@master2 ~]# yum -y install mariadb*</p>
</blockquote>
<p>开启mariadb服务</p>
<blockquote>
<p>[root@master1 ~]# systemctl start mariadb<br>[root@master2 ~]# systemctl start mariadb</p>
</blockquote>
<p>关闭防火墙（或者开发防火墙的mysql服务和3306端口）</p>
<blockquote>
<p>[root@master1 ~]# systemctl stop firewalld.service<br>[root@master2 ~]# systemctl stop firewalld.service</p>
</blockquote>
<p>三.配置方法</p>
<p>master1<br>修改主库my.cnf主要设置个不一样的ID，以及同步的数据库的名字和端口号</p>
<blockquote>
<p>[root@master1 ~]# vim /etc/my.cnf<br>server-id=1<br>log-bin=lhb<br>port=3306</p>
</blockquote>
<p>重启服务使配置生效</p>
<blockquote>
<p>[root@master1 ~]# systemctl restart mariadb</p>
</blockquote>
<p>登录主库赋予从库权限账号，允许用户在主库上读取日志(用户名：admin，密码：123456）</p>
<blockquote>
<p>[root@master1 ~]# mysql -uroot -p123456<br>MariaDB [(none)]&gt; grant replication slave on <em>.</em> to ‘admin’@’172.25.0.11’ identified by ‘123456’;</p>
</blockquote>
<p>我们可以在master2的主机上用命令作如下去验证下是否可以进入master1的MySQL</p>
<blockquote>
<p>[root@master2 ~]# mysql -uadmin -p’123456’ -h 172.25.0.254</p>
</blockquote>
<p>显示主数据看的信息</p>
<blockquote>
<p>MariaDB [(none)]&gt; show master status;<br>    +————+———-+————–+——————+<br>    | File       | Position | Binlog_Do_DB | Binlog_Ignore_DB |<br>    +————+———-+————–+——————+<br>    | lhb.000002 |      245 |              |                  |<br>    +————+———-+————–+——————+<br>    1 row in set (0.00 sec)</p>
</blockquote>
<p>设置同步</p>
<blockquote>
<p>MariaDB [(none)]&gt; slave stop;<br>    Query OK, 0 rows affected, 1 warning (0.00 sec)<br>MariaDB [(none)]&gt; change master to master_host=’172.25.0.11’,master_user=’admin’,master_password=’123456’,master_log_file=’lhb.000002’,master_log_pos=245;<br>    Query OK, 0 rows affected (0.03 sec)<br>master2</p>
</blockquote>
<p>修改主库my.cnf主要设置个不一样的ID，以及同步的数据库的名字和端口号</p>
<blockquote>
<p>[root@master2 ~]# vim /etc/my.cnf<br>server-id=2<br>log-bin=lhb<br>port=3306</p>
</blockquote>
<p>重启服务使配置生效</p>
<blockquote>
<p>[root@master2 ~]# systemctl restart mariadb</p>
</blockquote>
<p>登录主库赋予从库权限账号，允许用户在主库上读取日志(用户名：admin，密码：123456）</p>
<blockquote>
<p>[root@master2 ~]# mysql -uroot -p123456<br>MariaDB [(none)]&gt; grant replication slave on <em>.</em> to ‘admin’@’172.25.0.254’ identified by ‘123456’;</p>
</blockquote>
<p>我们可以在master1的主机上用命令作如下去验证下是否可以进入master1的MySQL</p>
<blockquote>
<p>[root@master1 ~]# mysql -uadmin -p’123456’ -h 172.25.0.11</p>
</blockquote>
<p>显示主数据看的信息</p>
<blockquote>
<p>MariaDB [(none)]&gt; show master status;<br>    +————+———-+————–+——————+<br>    | File       | Position | Binlog_Do_DB | Binlog_Ignore_DB |<br>    +————+———-+————–+——————+<br>    | lhb.000002 |      245 |              |                  |<br>    +————+———-+————–+——————+<br>    1 row in set (0.00 sec)</p>
</blockquote>
<p>设置同步</p>
<blockquote>
<p>MariaDB [(none)]&gt; slave stop；<br>    MariaDB [(none)]&gt; change master to master_host=’172.25.0.254’,master_user=’admin’,master_password=’123456’,master_log_file=’lhb.000002’,master_log_pos=245;<br>在master1 和master2 两个主机同时敲下<br>MariaDB [(none)]&gt; slave start；</p>
</blockquote>
<p>查看是否成功</p>
<blockquote>
<p>MariaDB [(none)]&gt; show slave status\G;<br>Slave_IO_Running: Yes<br>Slave_SQL_Running: Yes<br>两个为Yes表示成功（两台主机都需要查看）</p>
</blockquote>
<p>测试：在master1建立lhbdb的数据库，看看在master2是否会同步</p>
<p>master1</p>
<blockquote>
<p>MariaDB [(none)]&gt; create database lhbdb;<br>    Query OK, 1 row affected (0.00 sec)<br>    MariaDB [(none)]&gt; show databases;<br>    +——————–+<br>    | Database           |<br>    +——————–+<br>    | information_schema |<br>    | lhbdb              |<br>    | mysql              |<br>    | performance_schema |<br>    | test               |<br>    +——————–+<br>    5 rows in set (0.01 sec)</p>
</blockquote>
<p>master2</p>
<blockquote>
<p>MariaDB [(none)]&gt; show databases;<br>    +——————–+<br>    | Database           |<br>    +——————–+<br>    | information_schema |<br>    | lhbdb              |<br>    | mysql              |<br>    | performance_schema |<br>    | test               |<br>    +——————–+<br>    5 rows in set (0.01 sec)</p>
</blockquote>
<p>由此可以看到master2 能够到看lhbdb的数据库，表示MySQL主主搭建成功^<em>^^</em>^^_^!!!</p>
]]></content>
      
        
        <tags>
            
            <tag> Mysql </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[解决Vwmare14出现黑屏问题]]></title>
      <url>/2017/12/24/%E8%A7%A3%E5%86%B3Vwmare14%E5%87%BA%E7%8E%B0%E9%BB%91%E5%B1%8F%E9%97%AE%E9%A2%98/</url>
      <content type="html"><![CDATA[<p>在我们下载完Vwmare14，启动vwmare时出现黑屏现象</p>
<p>解决方法：修复LSP</p>
<a id="more"></a>
<blockquote>
<p>命令行窗口—输入netsh winsock reset<br>点击确定后重新启动下计算机就可以了</p>
</blockquote>
]]></content>
      
        
        <tags>
            
            <tag> Vwmare </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Linux下安装Python]]></title>
      <url>/2017/12/24/Linux%E4%B8%8B%E5%AE%89%E8%A3%85Python/</url>
      <content type="html"><![CDATA[<p>1.下载python压缩包(这里这的是python2.7版本)</p>
<blockquote>
<p>wget   <a href="https://www.python.org/ftp/pthon/2.7.11/Python-2.7.11.tgz" target="_blank" rel="noopener">https://www.python.org/ftp/pthon/2.7.11/Python-2.7.11.tgz</a></p>
</blockquote>
<a id="more"></a>
<p>2.解压python压缩包</p>
<blockquote>
<p>tar  -xvf Python-2.7.11.tgz</p>
</blockquote>
<p>3.编辑文件包并编译源码包</p>
<blockquote>
<p>cdPython-2.7.11<br>  ./configure<br>make<br>make install</p>
</blockquote>
<p>4.创建软链接</p>
<blockquote>
<p>cd /usr/bin/<br>rm -rf python<br>ln -s /usr/local/Python-x.x.x/bin/python ./python</p>
</blockquote>
]]></content>
      
        
        <tags>
            
            <tag> Python </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[linux下MySql命令]]></title>
      <url>/2017/12/24/linux%E4%B8%8BMySql%E5%91%BD%E4%BB%A4/</url>
      <content type="html"><![CDATA[<p>1.显示数据库</p>
<blockquote>
<p>show databases;</p>
</blockquote>
<p>2.选择数据库</p>
<blockquote>
<p>use 数据库名；<br><a id="more"></a><br>3.显示数据库中的表<br>show tables；</p>
</blockquote>
<p>4.显示数据表的结构</p>
<blockquote>
<p>desc 表名；</p>
</blockquote>
<p>5.显示表中记录</p>
<blockquote>
<p>select * from 表名；</p>
</blockquote>
<p>6.建库</p>
<blockquote>
<p>create databases 库民；</p>
</blockquote>
<p>7.建表</p>
<blockquote>
<p>Create table 表名（字段设定列表）</p>
<p>例子：mysql&gt; create table student(<br>   -&gt; id int auto_increment not null primary key ,<br>   -&gt; name char(8),<br>   -&gt; set char(2),<br>           -&gt; birthday date );<br>      Query OK, 0 rows affected (0.03 sec)</p>
</blockquote>
<p>8.修改编码</p>
<blockquote>
<p>alter table table_name convert to character set utf8;</p>
</blockquote>
<p>9.增加记录</p>
<blockquote>
<p>insert into name(uname,gender,birthday) values(‘张三’,’男’,’1971-10-01’);</p>
</blockquote>
<p>10.修改记录</p>
<blockquote>
<p>update name set birthday=’1971-01-10’ where uname=’张三’;</p>
</blockquote>
<p>11.删除记录</p>
<blockquote>
<p>delete from name where uname=’张三’；</p>
</blockquote>
<p>12.删除表 </p>
<blockquote>
<p>drop table 表名；</p>
</blockquote>
<p>13.删除库</p>
<blockquote>
<p>drop databases 库名；</p>
</blockquote>
<p>14.备份数据库</p>
<blockquote>
<p>mysqldump -u root -p 数据库名&gt;备份文件——–输入数据库的密码</p>
</blockquote>
<p>15.恢复数据库</p>
<blockquote>
<p>mysql -u root -p 数据库名 &lt; 备份名 —-&gt;恢复时数据库必须存在，可以为空数据库；<br>或<br>进入数据库—–&gt;创建数据库名—–&gt;source   要导入的数据库文件<br>例如：mysql  -uroot -ppassword—–&gt;use name;——–&gt;source  name.db</p>
</blockquote>
<p>16.备份数据库中的表</p>
<blockquote>
<p>mysqldump -u root -p –opt 数据库名 表名 &lt; 备份文件；</p>
</blockquote>
]]></content>
      
        
        <tags>
            
            <tag> Mysql </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Redhat快速安装LAMP和WordPress]]></title>
      <url>/2017/12/24/Redhat%E5%BF%AB%E9%80%9F%E5%AE%89%E8%A3%85LAMP%E5%92%8CWordPress/</url>
      <content type="html"><![CDATA[<p>####一、安装环境</p>
<blockquote>
<p>[root@lin_haobin ~]# more /etc/redhat-release<br>Red Hat Enterprise Linux Server release 7.0 (Maipo)<br><a id="more"></a></p>
<p>####二、基于yum方式安装httpd、php、mariadb</p>
<p>[root@lin_haobin ~]# yum -y install httpd<br>[root@lin_haobin ~]# yum -y install mariadb-server<br>[root@lin_haobin ~]# yum -y install php  php-mysql</p>
</blockquote>
<p>#####验证安装包</p>
<blockquote>
<p>[root@lin_haobin ~]# rpm -qa|grep httpd<br>httpd-2.4.6-17.el7.x86_64<br>httpd-tools-2.4.6-17.el7.x86_64</p>
<p>[root@lin_haobin ~]# rpm -qa|grep php<br>php-pdo-5.4.16-21.el7.x86_64<br>php-common-5.4.16-21.el7.x86_64<br>php-mysql-5.4.16-21.el7.x86_64<br>php-5.4.16-21.el7.x86_64<br>php-cli-5.4.16-21.el7.x86_64</p>
<p>[root@lin_haobin ~]# rpm -qa|grep maria<br>mariadb-5.5.35-3.el7.x86_64<br>mariadb-server-5.5.35-3.el7.x86_64<br>mariadb-libs-5.5.35-3.el7.x86_64</p>
</blockquote>
<p>启动httpd</p>
<blockquote>
<p>[root@lin_haobin ~]# systemctl start httpd</p>
</blockquote>
<p>验证httpd</p>
<blockquote>
<p>[root@lin_haobin ~]# echo “The httpd is running.”&gt;/var/www/html/index.html</p>
</blockquote>
<p>在浏览器输入<a href="http://localhost" target="_blank" rel="noopener">http://localhost</a>    出现下面的页面则说明httpd安装成功<br><img src="http://img.blog.csdn.net/20171211211504783?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvTGluX2hhb2Jpbg==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<p>启动mariadb</p>
<blockquote>
<p>[root@lin_haobin ~]# systemctl start mariadb</p>
</blockquote>
<p>验证mariadb</p>
<blockquote>
<p>[root@lin_haobin ~]# mysql<br>Welcome to the MariaDB monitor.  Commands end with ; or \g.<br>Your MariaDB connection id is 2<br>Server version: 5.5.35-MariaDB MariaDB Server</p>
<p>Copyright (c) 2000, 2013, Oracle, Monty Program Ab and others.</p>
<p>Type ‘help;’ or ‘\h’ for help. Type ‘\c’ to clear the current input statement.</p>
<p>MariaDB [(none)]&gt; show variables like ‘version’;<br>+—————+—————-+<br>| Variable_name | Value          |<br>+—————+—————-+<br>| version       | 5.5.35-MariaDB |<br>+—————+—————-+<br>1 row in set (0.01 sec)</p>
<p>MariaDB [(none)]&gt; exit<br>Bye</p>
</blockquote>
<p>测试php</p>
<blockquote>
<p>[root@lin_haobin ~]# echo “<br>The PHP is running.<br>?php<br>phpinfo();<br>?&gt;<br>“&gt;/var/www/html/index.php </p>
</blockquote>
<p>在浏览器输入<a href="http://localhost/index.php出现下面的页面则说明php安装成功" target="_blank" rel="noopener">http://localhost/index.php出现下面的页面则说明php安装成功</a></p>
<p><img src="http://img.blog.csdn.net/20171211212348203?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvTGluX2hhb2Jpbg==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<p>###三、安装及配置Wordpress</p>
<p>将WordPress上传到服务器</p>
<blockquote>
<p>[root@lin_haobin Desktop]# ll<br>total 9032<br>-rw-r–r–. 1 root root 9245300 Dec 11 16:04 wordpress-4.7.4-zh_CN.zip</p>
</blockquote>
<p>解压WordPress，并解压到/var/www/html/目录下,并配置</p>
<blockquote>
<p>[root@lin_haobin Desktop]# unzip -q wordpress-4.7.4-zh_CN.zip -d /var/www/html/<br>[root@lin_haobin Desktop]# cp /var/www/html/wordpress/wp-config-sample.php /var/www/html/wordpress/wp-config.php<br>[root@lin_haobin Desktop]# vim /var/www/html/wordpress/wp-config.php<br>/<em>* WordPress数据库的名称 </em>/</p>
<p>define(‘DB_NAME’, ‘wordpress’);</p>
<p>/<em>* MySQL数据库用户名 </em>/</p>
</blockquote>
<p>define(‘DB_USER’, ‘admin’);</p>
<blockquote>
<p>/<em>* MySQL数据库密码 </em>/</p>
</blockquote>
<p>define(‘DB_PASSWORD’, ‘admin’);</p>
<blockquote>
<p>/<em>* MySQL主机 </em>/</p>
</blockquote>
<p>define(‘DB_HOST’, ‘localhost’);</p>
<blockquote>
<p>/<em>* 创建数据表时默认的文字编码 </em>/</p>
</blockquote>
<p>define(‘DB_CHARSET’, ‘utf8’);</p>
<blockquote>
<p>/<em>* 数据库整理类型。如不确定请勿更改 </em>/</p>
</blockquote>
<p>define(‘DB_COLLATE’, ‘’);</p>
<p>创建wordpress数据库及用户</p>
<blockquote>
<p>[root@lin_haobin Desktop]#mysql<br>MariaDB [(none)]&gt; create database wordpress character set utf8;<br>Query OK, 1 row affected (0.00 sec)</p>
<p>MariaDB [(none)]&gt; grant all privileges on wordpress.* to ‘admin’@’localhost’ identified by ‘admin’;<br>Query OK, 0 rows affected (0.00 sec)</p>
<p>MariaDB [(none)]&gt; flush privileges;<br>Query OK, 0 rows affected (0.00 sec)</p>
</blockquote>
<p>####配置wordpress</p>
<p>打开浏览器完成wordpress配置<br>在浏览器输入<a href="http://localhost/wordpress" target="_blank" rel="noopener">http://localhost/wordpress</a></p>
<p><img src="http://img.blog.csdn.net/20171211213011298?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvTGluX2hhb2Jpbg==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<p>填写信息，点击安装WordPress</p>
<p><img src="http://img.blog.csdn.net/20171211213227798?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvTGluX2hhb2Jpbg==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<p>输入密码，点击登录</p>
<p><img src="http://img.blog.csdn.net/20171211213333821?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvTGluX2hhb2Jpbg==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<p><img src="http://img.blog.csdn.net/20171211213353074?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvTGluX2hhb2Jpbg==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<p>出现上面的页面证明WordPress已经安装完成了。</p>
]]></content>
      
        
        <tags>
            
            <tag> redhat </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[搭建Apache虚拟目录]]></title>
      <url>/2017/12/24/%E6%90%AD%E5%BB%BAApache%E8%99%9A%E6%8B%9F%E7%9B%AE%E5%BD%95/</url>
      <content type="html"><![CDATA[<p>####搭建过程<br>1.验证Apache</p>
<blockquote>
<p>[root@localhost /]# echo “this is a html “ &gt; /var/www/html/index.html</p>
</blockquote>
<a id="more"></a>
<p>出现下面的页面说明安装成功</p>
<p><img src="http://img.blog.csdn.net/20171216170835230?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvTGluX2hhb2Jpbg==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<p>2.配置Apache文件</p>
<blockquote>
<p>[root@localhost /]# cd /etc/httpd/conf<br>[root@localhost conf]# touch xunni.conf     //必须.conf结尾</p>
</blockquote>
<p>添加下面文件内容</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;VirtualHost *:80&gt;</span><br><span class="line">Alias /data1 &quot;/data1/&quot;</span><br><span class="line">&lt;Directory &quot;/data1/&quot;&gt;</span><br><span class="line">Options +Indexes +FollowSymlinks</span><br><span class="line">AllowOverride All</span><br><span class="line">Require all granted</span><br><span class="line">&lt;/Directory&gt;</span><br><span class="line">&lt;/VirtualHost&gt;</span><br></pre></td></tr></table></figure>
<p>3.创建虚拟目录</p>
<blockquote>
<p>[root@localhost conf]# cd /var/www/html/<br>[root@localhost html]# mkdir data1       //必须与apache配置文件同名<br>[root@localhost html]# echo “this is a data1” &gt; index.html</p>
</blockquote>
<p>在浏览器输入<a href="http://ip地址/data1" target="_blank" rel="noopener">http://ip地址/data1</a></p>
<p><img src="http://img.blog.csdn.net/20171216171731433?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvTGluX2hhb2Jpbg==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
]]></content>
      
        
        <tags>
            
            <tag> linux </tag>
            
        </tags>
        
    </entry>
    
  
  
</search>
