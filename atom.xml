<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Lin_haobin&#39;s Blog</title>
  
  <subtitle>不忘初心 方得终始</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.lhb520.cn/"/>
  <updated>2017-12-30T11:45:16.610Z</updated>
  <id>http://www.lhb520.cn/</id>
  
  <author>
    <name>Lin_haobin</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Squid反向代理</title>
    <link href="http://www.lhb520.cn/2017/12/30/Squid%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86/"/>
    <id>http://www.lhb520.cn/2017/12/30/Squid反向代理/</id>
    <published>2017-12-30T11:43:59.000Z</published>
    <updated>2017-12-30T11:45:16.610Z</updated>
    
    <content type="html"><![CDATA[<p>实验环境:<br>    （1）双网卡Redhat7系统–SQUID<br>    （2）Redhat7系统–WEB<br>    （3）Windows 7 –物理机<br>实验环境部署：<br><a id="more"></a><br>    SQUID ：外网使用NAT模式<br>        内网IP 172.25.0.10/24 网关 0.0.0.0<br>     WEB : 内网IP 172.25.0.11/24 网关 172.25.0.10<br>    物理机：能够ping通SQUID的外网卡</p><p>实验过程：</p><pre><code>WEB 部署apache服务        [root@localhost ~]# yum - y install httpd    设置apache网页的主页面        [root@localhost ~]# echo &quot;this is a squid server &quot; &gt; /var/www/html/index.html    重启apache服务        [root@localhost ~]# systemctl restart httpd    关闭防火墙        [root@localhost ~]# systemctl stop firewalldSQUID   安转squid服务        [root@localhost ~]# yum -y install squid        配置squid主配置文件        添加：              http_access allow all              cache_peer 172.25.0.11 parent 80 0 originserver weight=1              #172.25.0.11 为apache服务器的ip地址         修改：http_port 3128 为http_port 80 accel vhost        重启下squid服务            [root@localhost ~]# systemctl restart squid         关闭防火墙            [root@localhost ~]# systemctl stop firewalld物理机    打开浏览器输入squid外网卡的ip地址，查看是否跳转到web服务器的页面</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;实验环境:&lt;br&gt;    （1）双网卡Redhat7系统–SQUID&lt;br&gt;    （2）Redhat7系统–WEB&lt;br&gt;    （3）Windows 7 –物理机&lt;br&gt;实验环境部署：&lt;br&gt;
    
    </summary>
    
    
      <category term="linux" scheme="http://www.lhb520.cn/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>LVS--DR实现负载均衡</title>
    <link href="http://www.lhb520.cn/2017/12/30/LVS-DR%E5%AE%9E%E7%8E%B0%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1/"/>
    <id>http://www.lhb520.cn/2017/12/30/LVS-DR实现负载均衡/</id>
    <published>2017-12-30T11:32:42.000Z</published>
    <updated>2017-12-30T11:37:37.398Z</updated>
    
    <content type="html"><![CDATA[<p>###实验环境及需要的软件：</p><blockquote><p>两台 Redhat7 系统 （一台做负载均衡Load Balancer，一台做服务器Server）<br>    ipvsadm-1.24-8.1.i386.rpm</p></blockquote><p>###实验过程：</p><p>####Load Balancer服务器<br><a id="more"></a><br>配置ip地址</p><blockquote><p>[root@localhost ~]# vim /etc/sysconfig/network-scripts/ifcfg-eno33554960<br>                IPADDR=172.25.0.10<br>                NETMASK=255.255.255.0<br>                GATEWAY=0.0.0.0</p></blockquote><p>安装 ipvsadm 管理程序</p><blockquote><p>[root@localhost ~]# rpm -ivh ipvsadm-1.27-4.el7.x86_64.rpm</p></blockquote><p>配置 VIP 设定脚本</p><blockquote><p>[root@localhost ~]# vi /opt/vip.sh</p><pre><code>#!/bin/bashVIP=172.25.0.100/sbin/ifconfig eno33554960:0 $VIP broadcast $VIP netmask 255.255.255.255 up/sbin/route add -host $VIP dev eno33554960:0sysctl -w net.ipv4.conf.all.send_redirects=0sysctl -w net.ipv4.conf.default.send_redirects=0sysctl -w net.ipv4.conf.eno33554960.send_redirects=0</code></pre></blockquote><p>设置脚本可执行权限</p><blockquote><p>[root@localhost ~]# chmod u+x /opt/vip.sh</p></blockquote><p>开机自启动</p><blockquote><p>[root@localhost ~]# echo “/opt/vip.sh” &gt;&gt; /etc/rc.local</p></blockquote><p>运行脚本</p><blockquote><p>[root@localhost ~]# /opt/vip.sh</p></blockquote><p>查看是否成功</p><blockquote><p>[root@localhost ~]# ifconfig eno33554960:0</p></blockquote><p>增加 virtual service</p><blockquote><p>[root@localhost ~]# ipvsadm -A -t 172.25.0.100:80 -s rr</p></blockquote><p>增加virtual service并指定 lvs 使用 DR 直接路由模式</p><blockquote><p>[root@localhost ~]# ipvsadm -a -t 172.25.0.100:80 -r 172.25.0.12:80 -g</p></blockquote><p>保存设置</p><blockquote><p>[root@localhost ~]# ipvsadm-save &gt; /etc/sysconfig/ipvsadm </p></blockquote><p>查看 ipvsadm  列表</p><blockquote><p>[root@localhost ~]# ipvsadm -l </p></blockquote><p>关闭防火墙<br>[root@localhost ~]# systemctl stop firewalld</p><p>####Server服务器</p><p>配置 VIP 设定脚本</p><blockquote><p>[root@localhost ~]# vi /opt/lvs-dr</p><pre><code>#!/bin/shVIP=172.25.0.100/sbin/ifconfig eno33554992 172.25.0.12/24/sbin/ifconfig lo:0 $VIP broadcast $VIP netmask 255.255.255.255 up/sbin/route add -host $VIP dev lo:0echo &quot;1&quot; &gt; /proc/sys/net/ipv4/conf/lo/arp_ignoreecho &quot;2&quot; &gt; /proc/sys/net/ipv4/conf/lo/arp_announceecho &quot;1&quot; &gt; /proc/sys/net/ipv4/conf/all/arp_ignoreecho &quot;2&quot; &gt; /proc/sys/net/ipv4/conf/all/arp_announce</code></pre></blockquote><p>设置脚本可执行权限</p><blockquote><p>[root@classroom ~]# chmod +x /opt/lvs-dr </p></blockquote><p>开机自启动</p><blockquote><p>[root@classroom ~]# echo “/opt/lvs-dr” &gt;&gt;/etc/rc.local</p></blockquote><p>运行脚本    </p><blockquote><p>[root@classroom ~]# /opt/lvs-dr</p></blockquote><p>安转Apache</p><blockquote><p>[root@classroom ~]# yum -y install httpd</p></blockquote><p>编辑Apache网站主页面</p><blockquote><p>[root@classroom ~]# echo “this is a server” &gt; /var/www/html/index.html</p></blockquote><p>关闭防火墙</p><blockquote><p>[root@localhost ~]# systemctl stop firewalld</p></blockquote><p>####测试</p><p>在Load Balancer服务器的浏览器输入Server的ip地址，看是否会跳转到Server的网站主页面</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;###实验环境及需要的软件：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;两台 Redhat7 系统 （一台做负载均衡Load Balancer，一台做服务器Server）&lt;br&gt;    ipvsadm-1.24-8.1.i386.rpm&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;###实验过程：&lt;/p&gt;
&lt;p&gt;####Load Balancer服务器&lt;br&gt;
    
    </summary>
    
    
      <category term="linux" scheme="http://www.lhb520.cn/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>Windows安装pip</title>
    <link href="http://www.lhb520.cn/2017/12/30/Windows%E5%AE%89%E8%A3%85pip/"/>
    <id>http://www.lhb520.cn/2017/12/30/Windows安装pip/</id>
    <published>2017-12-30T09:08:36.000Z</published>
    <updated>2017-12-30T09:09:19.362Z</updated>
    
    <content type="html"><![CDATA[<p>一、windows 中pip的配置文件是%HOME%/pip/pip.ini(%HOME%为当前用户)<br>如果Windows的当前用户是King的话，那么配置文件的位置就是</p><blockquote><p>C：\Users\King\pip\pip.ini</p></blockquote><p>默认情况下pip文件夹和pip.ini文件都没有创建，需要自行创建。<br><a id="more"></a><br>二、修改pip.ini文件</p><blockquote><p>[global]<br>index-url = <a href="https://pypi.tuna.tsinghua.edu.cn/simple" target="_blank" rel="noopener">https://pypi.tuna.tsinghua.edu.cn/simple</a></p></blockquote><p>三、在Windows下的cmd模式输入以下</p><blockquote><p>python<br>-m pip<br>install -upgrade<br>pip </p></blockquote><p>四、测试pip</p><blockquote><p>pip -v    或<br>pip -h</p></blockquote><p>如果提示pip不是内部命令，那么我们需要修改环境变量</p><p>点击我的电脑–高级–环境变量</p><blockquote><p>找到path，修改路径加入C:\Pthon27\Scripts</p></blockquote><p>重启下cmd，然后输入pip </p><blockquote><p>-v    或<br>pip<br>-h</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;一、windows 中pip的配置文件是%HOME%/pip/pip.ini(%HOME%为当前用户)&lt;br&gt;如果Windows的当前用户是King的话，那么配置文件的位置就是&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;C：\Users\King\pip\pip.ini&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;默认情况下pip文件夹和pip.ini文件都没有创建，需要自行创建。&lt;br&gt;
    
    </summary>
    
    
      <category term="Window" scheme="http://www.lhb520.cn/tags/Window/"/>
    
  </entry>
  
  <entry>
    <title>安装本地yum源脚本</title>
    <link href="http://www.lhb520.cn/2017/12/30/%E5%AE%89%E8%A3%85%E6%9C%AC%E5%9C%B0yum%E6%BA%90%E8%84%9A%E6%9C%AC/"/>
    <id>http://www.lhb520.cn/2017/12/30/安装本地yum源脚本/</id>
    <published>2017-12-30T09:00:23.000Z</published>
    <updated>2017-12-30T09:10:08.352Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>rpm -qa|grep yum   //检查是否安装了yum.</p></blockquote><p>如果没有安装就执行下面的文件</p><p>创建一个以xxx.sh结尾的文件</p><p>＃!/bin/bash</p><p>＃1.创建两个文件用于挂载文件<br><a id="more"></a></p><blockquote><p>mkdir /mnt/yum  </p><p>mkdir  /dev/local</p></blockquote><p>＃2.挂载系统安装光盘</p><blockquote><p>mount /dev/cdrom /mnt/yum</p></blockquote><p>＃3.切换到源配置文件的目录下</p><blockquote><p>cd /etc/yum.repos.d</p><p>rm -rf *</p></blockquote><p>＃4.创建一个新的文件，记住必须以.repo结尾的文件</p><blockquote><p>touch local.repo</p></blockquote><p>＃5.编辑xxx.repo文件，basefile指定的路径必须是挂载的目录</p><blockquote><p>echo -e “[base]\nbaseurl=file:///mnt/yum\ngpgcheck=0\nenabled=1\n” &gt;<br> local.repo</p></blockquote><p>＃6.把它复制到系统上</p><blockquote><p>cp /mnt/yum/*  /dev/local/</p></blockquote><p>＃7.清除所有的缓存</p><blockquote><p>yum clean all</p></blockquote><p>＃8.列出rpm包</p><blockquote><p>yum list</p></blockquote><p>保存文件并退出</p><p>执行该脚本 sh xxx.sh 或chmod  +x  xxx.sh</p><p>如果在负责的时候提示你系统空间不足的话，那么我们就直接使用开机自动挂载就可以不用负责到系统上了。</p><blockquote><p>vim /etc/fstab  //去这个文档下面编辑下面这句话</p><p>/dev/cdrom /mnt/yum<br>iso9660 defaults,ro 0 0</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;rpm -qa|grep yum   //检查是否安装了yum.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;如果没有安装就执行下面的文件&lt;/p&gt;
&lt;p&gt;创建一个以xxx.sh结尾的文件&lt;/p&gt;
&lt;p&gt;＃!/bin/bash&lt;/p&gt;
&lt;p&gt;＃1.创建两个文件用于挂载文件&lt;br&gt;
    
    </summary>
    
    
      <category term="shell" scheme="http://www.lhb520.cn/tags/shell/"/>
    
  </entry>
  
  <entry>
    <title>linux--安装NFS服务器</title>
    <link href="http://www.lhb520.cn/2017/12/30/linux-%E5%AE%89%E8%A3%85NFS%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    <id>http://www.lhb520.cn/2017/12/30/linux-安装NFS服务器/</id>
    <published>2017-12-30T03:05:26.000Z</published>
    <updated>2017-12-30T04:53:59.047Z</updated>
    
    <content type="html"><![CDATA[<p>首先，在我们安装nfs的时候，我们需要了解两个套件：portmap和nfs－utils或者nfs－utiles－clients </p><p>###portmap<br>portmap是我们启动NFS的时候必须启动的一个准备工作。portmap会将自己管理的port map分配给client，让它连接nfs 服务器<br><a id="more"></a></p><p>###nfs－utils或者nfs－utiles－clients</p><p>这个是nfs的主要套件，它提供rpc.nfsd及rpc.mountd这两个NFS daemons（守护进程）与其相它相关documents与说明文件、执行档文档等的套件.<br>所以在开始安装的时候，我们需要先查看下是否安装了这两个套件。</p><p>查看的命令很简单</p><blockquote><p>rpm -qa |grep nfs  和 rpm -qa |grep portmap</p></blockquote><p>如果没有安装，那么我们使用</p><blockquote><p>yum -y install nfs* 和yum -y install portmap 把它们安装上去</p></blockquote><p>安装完后，我们需要启动下服务：  </p><blockquote><p>/etc/rc.d/init.d/portmap start  –&gt;启动portmap<br>/etc/rc.d/init.d/nfs start          –&gt;启动nfs</p></blockquote><p>###安装NFS服务<br>服务器的配置：</p><blockquote><p>[root@classroom Desktop]# yum -y install nfs-utils rpcbind<br>[root@classroom Desktop]# rpm -qa | grep nfs<br>libnfsidmap-0.25-9.el7.x86_64<br>nfs-utils-1.3.0-0.el7.x86_64<br>[root@classroom Desktop]# rpm -qa | grep rpcbind<br>rpcbind-0.2.0-23.el7.x86_64</p></blockquote><p>创建共享目录，并给予权限：</p><blockquote><p>[root@classroom Desktop]# mkdir /var/web<br>[root@classroom Desktop]# chmod a+w /var/web/<br>[root@classroom Desktop]# cd /var/web/<br>[root@classroom web]# touch test.txt</p></blockquote><p>编辑NFS主配置文件：</p><blockquote><p>[root@classroom web]# vim /etc/exports</p></blockquote><p>###文件格式：共享路径  客户端主机（选项）<br>/var/web/  172.25.0.11(rw)</p><p>重启下服务：</p><blockquote><p>[root@classroom web]# systemctl restart nfs<br>[root@classroom web]# systemctl restart rpcbind</p></blockquote><p>客户端的配置：<br>显示NFS服务器的输出</p><blockquote><p>[root@server0 var]# showmount -e classroom.example.com<br>Export list for classroom.example.com:<br>/var/web     172.25.0.11</p></blockquote><p>创建共享目录，并实施挂载：</p><blockquote><p>[root@server0 Desktop]# mkdir /var/web<br>[root@server0 Desktop]# mount classroom.example.com:/var/web /var/web</p></blockquote><p>设置开启自启动</p><blockquote><p>[root@server0 /]# echo “classroom.example.com:/var/web /var/web nfs defaults 0 0” &gt;&gt;/etc/fstab</p></blockquote><p>测试是否共享成功：</p><blockquote><p>[root@server0 /]# ll /var/web/<br>-rw-r–r– 1 root root 14 Oct 30 10:22 test.txt</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;首先，在我们安装nfs的时候，我们需要了解两个套件：portmap和nfs－utils或者nfs－utiles－clients &lt;/p&gt;
&lt;p&gt;###portmap&lt;br&gt;portmap是我们启动NFS的时候必须启动的一个准备工作。portmap会将自己管理的port map分配给client，让它连接nfs 服务器&lt;br&gt;
    
    </summary>
    
    
      <category term="linux" scheme="http://www.lhb520.cn/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>Redhat部署tomcat+apache+java环境</title>
    <link href="http://www.lhb520.cn/2017/12/30/Redhat%E9%83%A8%E7%BD%B2tomcat-apache-java%E7%8E%AF%E5%A2%83/"/>
    <id>http://www.lhb520.cn/2017/12/30/Redhat部署tomcat-apache-java环境/</id>
    <published>2017-12-30T02:52:31.000Z</published>
    <updated>2017-12-30T03:03:40.628Z</updated>
    
    <content type="html"><![CDATA[<p>   Apache只是一个web服务器，并不能运行JSP程序。如果要运行JSP程序，还需要安装Tomcat服务器软件，通过连接器组件整合Tomcat与Apche。当用户请求访问*.jsp网页时，由Aapache自动调用tomcat服务进行解析，并将结果页面返回到客户端浏览器。</p><p>我的安装环境及所需要的软件:<br><a id="more"></a></p><blockquote><p>RHEL7.0<br>httpd-2.2.29.tar.gz<br>apache-tomcat-7.0.57.tar.gz<br>jdk-8u25-linux-i586.tar.gz<br>mod_jk-1.2.28-httpd-2.2.X.so  </p></blockquote><p>安装过程：</p><blockquote><p>[root@localhost Desktop]# ll<br>-rw-r–r–.  1 root root   8900571 Nov  1 08:35 apache-tomcat-7.0.57.tar.gz<br>drwxr-xr-x. 12  500  500      4096 Nov  1 19:21 httpd-2.2.29<br>-rw-r–r–.  1 root root   7537230 Nov  1 08:36 httpd-2.2.29.tar.gz<br>-rw-r–r–.  1 root root 162406866 Nov  1 08:36 jdk-8u25-linux-i586.tar.gz<br>-rw-r–r–.  1 root root    930293 Nov  1 08:34 mod_jk-1.2.28-httpd-2.2.X.so  </p></blockquote><p>（1）安装httpd</p><blockquote><p>[root@localhost Desktop]# yum -y install gcc gcc-c++<br>[root@localhost Desktop]# tar xf httpd-2.2.29.tar.gz<br>[root@localhost Desktop]# cd httpd-2.2.29/<br>[root@localhost Desktop]# ./configure –prefix=/usr/local/apache2 –enable-rewrite –enable-so  </p></blockquote><p>防火墙开放http协议、https协议和开启8080端口</p><blockquote><p>[root@localhost Desktop]# firewall-cmd –add-service=http<br>[root@localhost Desktop]# firewall-cmd –add-service=https<br>[root@localhost Desktop]# firewall-cmd –zone=public –add-port=80/tcp –permanent  </p></blockquote><p>启动apache</p><blockquote><p>[root@localhost Desktop]# /usr/local/apache2/bin/apachectl start  </p></blockquote><p>测试apache是否安装成功 </p><blockquote><p>[root@localhost Desktop]# echo “apache is successfully.” &gt;/usr/local/apache2/htdocs/index.htm  </p></blockquote><p>打开浏览器输入<a href="http://主机ip地址" target="_blank" rel="noopener">http://主机ip地址</a></p><p>（2）安装dk-8u25-linux-i586.tar.gz</p><figure class="highlight plain"><figcaption><span>Desktop]# tar xf jdk-8u25-linux-i586.tar.gz  </span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost Desktop]# mkdir /usr/lib/jvmnew  </span><br><span class="line">[root@localhost Desktop]# mv jdk1.8.0_25/ /usr/lib/jvmnew/  </span><br><span class="line">[root@localhost Desktop]# cat &gt;&gt; ~/.bash_profile &lt;&lt;end  `&gt; #set jdk env  </span><br><span class="line">&gt; export JAVA_HOME=/usr/lib/jvmnew/jdk1.8.0_25  </span><br><span class="line">&gt; export JRE_HOME=/usr/lib/jvmnew/jdk1.8.0_25/jre  </span><br><span class="line">&gt; export  </span><br><span class="line"> CLASSPATH=.:\$JAVA_HOME/lib/dt.jar:\$JAVA_HOME/lib/tools.jar:\$JAVA_HOME/lib:\  </span><br><span class="line">$JRE_HOME/lib:\$CLASSPATH  </span><br><span class="line">&gt; export PATH=\$JAVA_HOME/bin:\$PATH  </span><br><span class="line">&gt; end  </span><br><span class="line">[root@localhost Desktop]# source ~/.bash_profile  </span><br><span class="line">[root@localhost Desktop]# yum install glibc.i686 -y  </span><br><span class="line">[root@localhost Desktop]# java -version     //这里可以看到新版的jdk</span><br></pre></td></tr></table></figure><p>因为系统本身就安装了jdk所以要更新一下配置</p><blockquote><p>[root@localhost Desktop]# update-alternatives –install /usr/bin/java java /usr/lib/jvmnew/jdk1.8.0_25/bin/java 300<br>[root@localhost Desktop]# update-alternatives –install /usr/bin/javac javac /usr/lib/jvmnew/jdk1.8.0_25/bin/javac 300  </p></blockquote><p>下面两条命令需要我们去选择使用哪个版本（需要清楚我们要使用哪个版本以便我们去选择）</p><blockquote><p>[root@localhost Desktop]# update-alternatives –config java<br>[root@localhost Desktop]# update-alternatives –config javac  </p></blockquote><p>可用下命令检查是否成功</p><blockquote><p>[root@localhost Desktop]# ls -lA /etc/alternatives/  </p></blockquote><p>（3）安装apache-tomcat-7.0.57.tar.gz</p><blockquote><p>[root@localhost Desktop]# mkdir /usr/tomcat7<br>[root@localhost Desktop]# tar xf  apache-tomcat-7.0.57.tar.gz  -C /usr/tomcat7/     #启动<br>[root@localhost Desktop]# /usr/tomcat7/apache-tomcat-7.0.57/bin/startup.sh          #关闭<br>[root@localhost Desktop]# /usr/tomcat7/apache-tomcat-7.0.57/bin/shutdown.sh  </p></blockquote><p>查看tomcat启动  </p><blockquote><p>[root@localhost Desktop]# ps -ef |grep tomcat  </p></blockquote><p>将之前～/.bash_profile改掉如下内容重新加载</p><blockquote><p>[root@localhost Desktop]# vim ~/.bash_profile<br><figure class="highlight plain"><figcaption><span>jdk env  </span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">export JAVA_HOME=/usr/lib/jvmnew/jdk1.8.0_25  </span><br><span class="line">export JRE_HOME=/usr/lib/jvmnew/jdk1.8.0_25/jre  </span><br><span class="line">export CATALINA_HOME=/usr/tomcat7/apache-tomcat-7.0.57  </span><br><span class="line">export CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar:$JAVA_HOME/lib:$JRE_HOME/lib:$CLASSPATH:$CATALINA_HOME/lib/servlet-api.jar  </span><br><span class="line">export PATH=$JAVA_HOME/bin:$PATH  </span><br><span class="line">#set jdk env</span><br></pre></td></tr></table></figure></p></blockquote><p>重新加载</p><blockquote><p>source ~/.bash_profile  </p></blockquote><p>测试：<br>在浏览器输入<a href="http://ip地址:8080，查看是否有弹出tomcat的网页" target="_blank" rel="noopener">http://ip地址:8080，查看是否有弹出tomcat的网页</a></p><p>给tomcat加密码</p><blockquote><p>[root@localhost Desktop]# vim /usr/tomcat7/apache-tomcat-7.0.57/conf/tomcat-users.xml   </p></blockquote><p>在这个文件，在中间插入如下行保存</p><figure class="highlight plain"><figcaption><span>username</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">```</span><br><span class="line">添加完后重新加载使配置生效</span><br><span class="line"></span><br><span class="line">&gt;[root@localhost Desktop]# /usr/tomcat7/apache-tomcat-7.0.57/bin/shutdown.sh  </span><br><span class="line">[root@localhost Desktop]# /usr/tomcat7/apache-tomcat-7.0.57/bin/startup.sh  </span><br><span class="line"></span><br><span class="line">测试：</span><br><span class="line">在浏览器输入http://ip地址:8080，查看是否有弹出让你输入用户名和密码的网页</span><br><span class="line"></span><br><span class="line">(4)将tomcat 服务与apache服务进行连接</span><br><span class="line"></span><br><span class="line">&gt;[root@localhost Desktop]# cp mod_jk-1.2.28-httpd-2.2.X.so /usr/local/apache2/modules/  </span><br><span class="line"></span><br><span class="line">修改apache配置文件如下，如果有就改，没有就加上</span><br><span class="line"></span><br><span class="line">&gt;[root@localhost Desktop]# vim /usr/local/apache2/conf/httpd.conf  </span><br><span class="line">###### </span><br><span class="line">&gt;servername www.lhb.com  </span><br><span class="line">DocumentRoot &quot;/usr/local/apache2/htdocs&quot;  </span><br><span class="line">######  </span><br><span class="line">&gt;Loadmodule jk_module modules/mod_jk-1.2.28-httpd-2.2.X.so  </span><br><span class="line">JkWorkersFile conf/workers.properties  </span><br><span class="line">JkLogFile logs/mod_jk.log  </span><br><span class="line">JkShmFile logs/mod_jk.shm  </span><br><span class="line">JkLogLevel notice  </span><br><span class="line">JkMount /*/*.jsp lhb  </span><br><span class="line">JkMountCopy All  </span><br><span class="line">AddType application/x-jsp .jsp  </span><br><span class="line"></span><br><span class="line">保存退出</span><br><span class="line"></span><br><span class="line">```[root@localhost Desktop]# cat &gt;&gt; /usr/local/apache2/conf/workers.properties &lt;&lt;end  </span><br><span class="line">&gt;worker.list=lhb  </span><br><span class="line">&gt;worker.lhb.port=8009  </span><br><span class="line">&gt;worker.lhb.host=localhost  </span><br><span class="line">&gt;worker.lhb.type=ajp13  </span><br><span class="line">&gt;worker.lhb.lbfactor=1  </span><br><span class="line">&gt;end</span><br></pre></td></tr></table></figure><blockquote><p>[root@localhost Desktop]# cd /usr/tomcat7/apache-tomcat-7.0.57<br>[root@localhost apache-tomcat-7.0.57]#  mv webapps webapps.bak<br>[root@localhost apache-tomcat-7.0.57]# ln -sf /usr/local/apache2/htdocs webapps<br>[root@localhost Desktop]# /usr/local/apache2/bin/apachectl stop<br>[root@localhost Desktop]# /usr/local/apache2/bin/apachectl start<br>[root@localhost Desktop]# /usr/tomcat7/apache-tomcat-7.0.57/bin/shutdown.sh<br>[root@localhost Desktop]# /usr/tomcat7/apache-tomcat-7.0.57/bin/startup.sh  </p></blockquote><p>测试：</p><blockquote><p>[root@localhost Desktop]# mkdir /usr/local/apache2/htdocs/apps<br>[root@localhost Desktop]# vim /usr/local/apache2/htdocs/apps/showtime.jsp<br>&lt;%@page language=”java” import=”java.util.*” %&gt;<br>now,thetimeis : &lt;%out.println(new Date());%&gt;  </p></blockquote><p><a href="http://主机ip地址/apps/showtime.jsp" target="_blank" rel="noopener">http://主机ip地址/apps/showtime.jsp</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;   Apache只是一个web服务器，并不能运行JSP程序。如果要运行JSP程序，还需要安装Tomcat服务器软件，通过连接器组件整合Tomcat与Apche。当用户请求访问*.jsp网页时，由Aapache自动调用tomcat服务进行解析，并将结果页面返回到客户端浏览器。&lt;/p&gt;
&lt;p&gt;我的安装环境及所需要的软件:&lt;br&gt;
    
    </summary>
    
    
      <category term="redhat" scheme="http://www.lhb520.cn/tags/redhat/"/>
    
  </entry>
  
  <entry>
    <title>shell--检查apache是否启动</title>
    <link href="http://www.lhb520.cn/2017/12/30/shell-%E6%A3%80%E6%9F%A5apache%E6%98%AF%E5%90%A6%E5%90%AF%E5%8A%A8/"/>
    <id>http://www.lhb520.cn/2017/12/30/shell-检查apache是否启动/</id>
    <published>2017-12-30T02:42:11.000Z</published>
    <updated>2017-12-30T02:46:12.226Z</updated>
    
    <content type="html"><![CDATA[<p>＃首先我们需要检查apache是否以启动，这里我们用到的说nmap命令，Linux默认情况下是没有安装nmap命令的。</p><p>＃那么我们需要安装下nmap，安装的命令很简单：</p><blockquote><p>yum -y install nmap</p></blockquote><p>＃###mnap -sT  192.168.1.1这条命令是检测服务器启动了什么服务，192.168.1.1这个为你的服务器的ip地址<br><a id="more"></a><br>＃apache是属于tcp协议的一种，我们先截取出有关tcp协议的服务，再截取http。</p><p>＃如果apache是启动的那么这条命令最后的截取结果为open，如果不启动那么截取的就为close</p><p>＃以下为脚本的内容</p><blockquote><p>open=$(mnap -sT  192.168.1.1 ｜grep tcp | grep http |awk ‘{print $2}’)</p><p>if [ “$open” == “open” ]</p><p>　　then</p></blockquote><p>＃如果是启动的就把apache启动的消息输出到apache启动日志文件中，正常情况下，应该是发送一份邮件告诉管理员apache是启动的，这里我就简化了</p><blockquote><p>　　　　echo “$date  The http is OK !!!”&gt;&gt;/tmp/httpd_acc.log</p></blockquote><p>　　else</p><p>＃如果是关闭的就启动下apache服务，并把启动成功的消息输出到apache关闭的日志文件中</p><blockquote><p>　　　　/var/rc.d/init.d/httpd restart $&gt;/dev/null</p><p>　　　　echo “$date The httpd  restart success !!! “&gt;&gt;/tmp/httpd_err.log</p><p>fi</p></blockquote><p>＃在正常情况下，每个服务器每15分钟必须检查一下apache是否启动，那么我们可以与crontab定时任务命令结合起来执行这个脚本。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;＃首先我们需要检查apache是否以启动，这里我们用到的说nmap命令，Linux默认情况下是没有安装nmap命令的。&lt;/p&gt;
&lt;p&gt;＃那么我们需要安装下nmap，安装的命令很简单：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;yum -y install nmap&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;＃###mnap -sT  192.168.1.1这条命令是检测服务器启动了什么服务，192.168.1.1这个为你的服务器的ip地址&lt;br&gt;
    
    </summary>
    
    
      <category term="shell" scheme="http://www.lhb520.cn/tags/shell/"/>
    
  </entry>
  
  <entry>
    <title>shell--apache日志分割脚本</title>
    <link href="http://www.lhb520.cn/2017/12/28/Linux-apache%E6%97%A5%E5%BF%97%E5%88%86%E5%89%B2%E8%84%9A%E6%9C%AC/"/>
    <id>http://www.lhb520.cn/2017/12/28/Linux-apache日志分割脚本/</id>
    <published>2017-12-28T03:23:59.000Z</published>
    <updated>2017-12-30T02:47:34.614Z</updated>
    
    <content type="html"><![CDATA[<p>#!/bin/bash</p><p>#这里是以一天为单位的日志分割</p><p>#记录下当天的日期</p><blockquote><p>date=date -d yesterday +% Y%m%d<br><a id="more"></a></p><p>#切换到apache的日志文件</p><p>#在这里需要明确的知道你自己的apache的日志存放在那个目录下，避免找不到apache日志存放目录<br>old=/usr/local/apache2/logs/access_log</p><p>#分割后的存放目录，一般情况下，为了美观，分割后的日志不会存放在跟原本的目录下。<br>mkdir -p /usr/local/apache2/logsback<br>old=/usr/local/apache/logsback/access_($date).log</p><p>#把日志分割<br>mv $old $new</p><p>#把apache挂起（目的是为了重新生成新的access_log日志文件）<br>pkill -l httpd<br>＃脚本写完后，那么我们就需要结合crontab －e命令每天凌晨12点执行该脚本</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;#!/bin/bash&lt;/p&gt;
&lt;p&gt;#这里是以一天为单位的日志分割&lt;/p&gt;
&lt;p&gt;#记录下当天的日期&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;date=date -d yesterday +% Y%m%d&lt;br&gt;
    
    </summary>
    
    
      <category term="shell" scheme="http://www.lhb520.cn/tags/shell/"/>
    
  </entry>
  
  <entry>
    <title>Linux搭建postfix邮件服务器</title>
    <link href="http://www.lhb520.cn/2017/12/28/Linux%E6%90%AD%E5%BB%BApostfix%E9%82%AE%E4%BB%B6%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    <id>http://www.lhb520.cn/2017/12/28/Linux搭建postfix邮件服务器/</id>
    <published>2017-12-28T03:14:42.000Z</published>
    <updated>2017-12-28T03:22:50.344Z</updated>
    
    <content type="html"><![CDATA[<p>1.修改主机名和部署DNS服务器</p><blockquote><p>[root@mail ~]# hostname<br>mail.disanzu.com</p></blockquote><p>部署DNF服务器可以参考我的另一篇安装DNS服务器的博客</p><blockquote><p><a href="http://blog.csdn.net/lin_haobin/article/details/73252815" target="_blank" rel="noopener">http://blog.csdn.net/lin_haobin/article/details/73252815</a><br><a id="more"></a><br>2.安装postfix服务器<br>[root@mail ~]# yum -y install postfix</p></blockquote><p>3.修改postfix配置文件</p><blockquote><p>[root@mail ~]# vim  /etc/postfix/main.cf    </p></blockquote><p>修改以下内容</p><blockquote><p>myhostname = 你的邮件域名</p></blockquote><p>设置服务器主机名</p><blockquote><p>mydomain = 你的域名  </p></blockquote><p>设置服务器的域名</p><blockquote><p>myorigin = $mydomain</p></blockquote><p>定义寄出邮件的域</p><blockquote><p>inet_interfaces = all</p></blockquote><p>指定要由服务器的哪些地址对外提供电子邮件服务</p><blockquote><p>mydestination = $myhostname, $mydomain<br>修改完后保存退出</p></blockquote><p>重启下postfix服务器</p><blockquote><p>systemctl restart postfix.service</p></blockquote><p>4.安装dovecot服务程序</p><blockquote><p>[root@mail ~]# yum -y install dovecot</p></blockquote><p>5.修改dovecot主配置文件</p><blockquote><p>[root@mail ~]# vim /etc/dovecot/dovecot.conf </p></blockquote><p>更改以下几点<br>设置支持的电子邮件协议</p><blockquote><p>protocols = imap pop3 lmtp</p></blockquote><p>允许用户明文登录（这一条需要自己手动添加）</p><blockquote><p>disable_plaintext_auth = no</p></blockquote><p>这里的IP为网络为即192.168.10.0/24</p><blockquote><p>login_trusted_networks = 服务器ip/24</p></blockquote><p>6.修改dovecot子配置文件<br>定义接受到邮件保存到服务器的哪个目录下</p><blockquote><p>[root@mail ~]# vim /etc/dovecot/conf.d/10-mail.conf<br>mail_location = mbox:~/mail:INBOX=/var/mail/%u</p></blockquote><p>更改完后重启下程序</p><blockquote><p>systemctl restart dovecot</p></blockquote><p>7.创建邮件用户，并创建存放目录</p><blockquote><p>[root@mail ~]# useradd text<br>[root@mail ~]#su - text<br>[text@mail ~]$ mkdir -p mail/.imap/INBOX/<br>[text@mail ~]$ su - root</p></blockquote><p>8.发送邮件<br>发送邮件   “mail”是这封邮件的名称</p><blockquote><p>[root@mail ~]# echo “this is a mail “ |mail -s “mail”  text@disanzu.com</p></blockquote><p>9.验证邮件</p><blockquote><p>[root@mail ~]# su - text<br>[text@mail ~]$ mail<br>Heirloom Mail version 12.4 7/29/08.  Type ? for help.<br>“/var/spool/mail/text”: 6 messages 6 new<br>N  1 root                  Thu Jun 15 16:43  22/777   “ass”<br> N  2 root                  Thu Jun 15 16:43  22/777   “ass”<br> N  3 root                  Thu Jun 15 16:44  22/798   “text mail”<br> N  4 root                  Thu Jun 15 16:44  22/798   “text mail”<br> N  5 root                  Thu Jun 15 16:44  22/799   “text mail”<br> N  6 root                  Thu Jun 15 16:57  22/790   “mail”<br>&amp; 6<br>Message  6:<br>From root@mail.disanzu.com  Thu Jun 15 16:57:48 2017<br>Return-Path: <a href="&#x6d;&#x61;&#105;&#108;&#116;&#x6f;&#x3a;&#x72;&#x6f;&#111;&#116;&#64;&#x6d;&#97;&#105;&#108;&#x2e;&#100;&#x69;&#x73;&#x61;&#110;&#122;&#117;&#x2e;&#99;&#x6f;&#x6d;">&#x72;&#x6f;&#111;&#116;&#64;&#x6d;&#97;&#105;&#108;&#x2e;&#100;&#x69;&#x73;&#x61;&#110;&#122;&#117;&#x2e;&#99;&#x6f;&#x6d;</a><br>X-Original-To: text@disanzu.com<br>Delivered-To: text@disanzu.com<br>From: root <a href="&#109;&#x61;&#x69;&#108;&#116;&#x6f;&#x3a;&#114;&#111;&#111;&#116;&#64;&#109;&#x61;&#105;&#x6c;&#x2e;&#x64;&#x69;&#x73;&#x61;&#110;&#122;&#x75;&#46;&#x63;&#x6f;&#109;">&#114;&#111;&#111;&#116;&#64;&#109;&#x61;&#105;&#x6c;&#x2e;&#x64;&#x69;&#x73;&#x61;&#110;&#122;&#x75;&#46;&#x63;&#x6f;&#109;</a><br>Date: Thu, 15 Jun 2017 16:57:48 -0400<br>To: text@disanzu.com<br>Subject: mail<br>User-Agent: Heirloom mailx 12.4 7/29/08<br>Content-Type: text/plain; charset=us-ascii<br>Status: R</p><p>this is a mail </p><p>&amp; </p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;1.修改主机名和部署DNS服务器&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;[root@mail ~]# hostname&lt;br&gt;mail.disanzu.com&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;部署DNF服务器可以参考我的另一篇安装DNS服务器的博客&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;http://blog.csdn.net/lin_haobin/article/details/73252815&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://blog.csdn.net/lin_haobin/article/details/73252815&lt;/a&gt;&lt;br&gt;
    
    </summary>
    
    
      <category term="linux" scheme="http://www.lhb520.cn/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>MySQL主从复制原理及搭建</title>
    <link href="http://www.lhb520.cn/2017/12/28/MySQL%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6%E5%8E%9F%E7%90%86%E5%8F%8A%E6%90%AD%E5%BB%BA/"/>
    <id>http://www.lhb520.cn/2017/12/28/MySQL主从复制原理及搭建/</id>
    <published>2017-12-28T03:09:59.000Z</published>
    <updated>2017-12-28T03:36:35.995Z</updated>
    
    <content type="html"><![CDATA[<p>###一、MySQL主从复制原理</p><blockquote><p>mysql支持单向、异步复制，复制过程中一个服务器充当主服务器，而一个或多个其它服务器充当从服务器。mysql复制基于主服务器在二进制日志中跟踪所有对数据库的更改(更新、删除等等)。因此，要进行复制，必须在主服务器上启用二进制日志。每个从服务器从主服务器接收主服务器已经记录到其二进制日志的保存的更新。当一个从服务器连接主服务器时，它通知主服务器从服务器在日志中读取的最后一次成功更新的位置。从服务器接收从那时起发生的任何更新，并在本机上执行相同的更新。然后封锁并等待主服务器通知新的更新。从服务器执行备份不会干扰主服务器，在备份过程中主服务器可以继续处理更新。<br><a id="more"></a></p><p>###二、MySQL主从复制搭建</p></blockquote><p>一.工作环境及条件</p><pre><code>&gt;主数据库：172.25.0.254从数据库：172.25.0.11操作系统：RHRL7MySQL版本：mariadb-5.5.35</code></pre><p> 安装MYSQL(yum源安装)<br>主数据库</p><pre><code>&gt;    [root@master ~]# yum clean all    [root@master ~]# yum -y install mariadb*</code></pre><p>从数据库</p><pre><code>&gt;[root@slave ~]# yum clean all</code></pre><p>开启mariadb服务</p><blockquote><pre><code>[root@master ~]# systemctl start mariadb  [root@slave ~]# systemctl start mariadb</code></pre></blockquote><p>关闭防火墙（或者开发防火墙的mysql服务和3306端口）</p><blockquote><pre><code>[root@master ~]# systemctl stop firewalld.service  [root@slave ~]# systemctl stop firewalld.service </code></pre></blockquote><p>####二.mysql主从复制配置方法</p><p>1.主数据库<br>修改主库my.cnf主要设置个不一样的ID，以及同步的数据库的名字和端口号（默认为3306）</p><blockquote><p>[root@slave ~]# vim /etc/my.cnf<br>        在[mysqld]中加入内容如下<br>    server-id=1<br>    log-bin=lhb<br>    port=3306</p></blockquote><p>重启服务使配置生效</p><blockquote><p>[root@master ~]# systemctl restart mariadb</p></blockquote><p> 设置mysql登录密码（默认情况下登录密码为空）</p><blockquote><p>[root@master ~]# mysqladmin -uroot password ‘123456’</p></blockquote><p>登录主库赋予从库权限账号，允许用户在主库上读取日志(用户名：admin，密码：123456）</p><blockquote><p>[root@master ~]# mysql -uroot -p123456</p></blockquote><p>进入mysql里面输入</p><blockquote><pre><code>MariaDB [(none)]&gt; grant replication slave on *.* to &apos;admin&apos;@&apos;172.25.0.254&apos; identified by &apos;123456&apos;;</code></pre></blockquote><p>为验证账号我们可以在从的机器上用命令作如下测试</p><blockquote><pre><code>[root@slave ~]# mysql -uadmin -p123456 -h 172.25.0.11</code></pre></blockquote><p>显示主数据看的信息</p><blockquote><p>MariaDB [(none)]&gt; show master status;<br>    +————+———-+————–+——————+<br>    | File       | Position | Binlog_Do_DB | Binlog_Ignore_DB |<br>    +————+———-+————–+——————+<br>    | lhb.000001 |      537 |              |                  |<br>    +————+———-+————–+——————+<br>    1 row in set (0.00 sec)</p></blockquote><pre><code>（记录File、Position的值，设置从数据库的时候会用到）</code></pre><p>2.从数据库</p><blockquote><p>修改从数据库的my.cnf，在[mysqld]如下:<br>server-id=2</p></blockquote><p>重启下数据库</p><blockquote><p>[root@slave ~]# systemctl restart mariadb</p></blockquote><p>设置mysql登录密码（默认情况下登录密码为空）</p><blockquote><p>[root@slave ~]# mysqladmin -uroot password ‘123456’</p></blockquote><p> 登录数据库</p><blockquote><p>[root@slave ~]# mysql -uroot -p123456    </p></blockquote><p>在从数据库上设置同步</p><blockquote><p>MariaDB [(none)]&gt; slave stop;<br>    Query OK, 0 rows affected, 1 warning (0.00 sec)<br>MariaDB [(none)]&gt; change master to master_host=’172.25.0.11’,master_user=’admin’,master_password=’123456’,master_log_file=’lhb.000001’,master_log_pos=537;<br>    Query OK, 0 rows affected (0.03 sec)</p><p>   这里的lhb.000001和537为主数据库的master status)<br>MariaDB [(none)]&gt; slave start;<br>    Query </p><p>MariaDB [(none)]&gt; show slave status\G;</p></blockquote><p>看到以下两行为Yes,表示成功了</p><blockquote><p>Slave_IO_Running: Yes<br>Slave_SQL_Running: Yes</p></blockquote><p>假如你的Slave_IO_Running:Connecting或者No<br>那么可能出现以下几点问题：</p><blockquote><p>   1.主从两个数据库不通。<br>    2.server-id设置错误。<br>    3.position设置错误。<br>    4.防火墙没关闭或者没开放mysql端口。</p></blockquote><p>3.测试<br>在主数据库上新建数据库，看看是否会同步。<br>主数据库上：</p><blockquote><p>MariaDB [(none)]&gt; show databases;<br>    +——————–+<br>    | Database           |<br>    +——————–+<br>    | information_schema |<br>    | mysql              |<br>    | performance_schema |<br>    | test               |<br>    +——————–+<br>    4 rows in set (0.01 sec)</p></blockquote><p>从数据库上：</p><blockquote><p>MariaDB [(none)]&gt; show databases;<br>    +——————–+<br>    | Database           |<br>    +——————–+<br>    | information_schema |<br>    | mysql              |<br>     | performance_schema |<br>    | test               |<br>    +——————–+<br>    4 rows in set (0.01 sec)</p></blockquote><p>主数据库上创建数据库并查看</p><blockquote><p>MariaDB [(none)]&gt; create database lhbdb;<br>    Query OK, 1 row affected (0.00 sec)</p></blockquote><p>MariaDB [(none)]&gt; show databases;<br>    +——————–+<br>    | Database           |<br>    +——————–+<br>    | information_schema |<br>    | lhbdb              |<br>    | mysql              |<br>    | performance_schema |<br>    | test               |<br>    +——————–+<br>    5 rows in set (0.00 sec)</p><p>从库上查看是否同步</p><blockquote><p>MariaDB [(none)]&gt; show databases;<br>    +——————–+<br>    | Database           |<br>    +——————–+<br>    | information_schema |<br>    | lhbdb              |<br>    | mysql              |<br>    | performance_schema |<br>    | test               |<br>    +——————–+<br>    5 rows in set (0.01 sec)</p></blockquote><p>由此可以看到在主数据库上建立数据库lhbdb,则表示成功了^<em>^^</em>^^_^</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;###一、MySQL主从复制原理&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;mysql支持单向、异步复制，复制过程中一个服务器充当主服务器，而一个或多个其它服务器充当从服务器。mysql复制基于主服务器在二进制日志中跟踪所有对数据库的更改(更新、删除等等)。因此，要进行复制，必须在主服务器上启用二进制日志。每个从服务器从主服务器接收主服务器已经记录到其二进制日志的保存的更新。当一个从服务器连接主服务器时，它通知主服务器从服务器在日志中读取的最后一次成功更新的位置。从服务器接收从那时起发生的任何更新，并在本机上执行相同的更新。然后封锁并等待主服务器通知新的更新。从服务器执行备份不会干扰主服务器，在备份过程中主服务器可以继续处理更新。&lt;br&gt;
    
    </summary>
    
    
      <category term="Mysql" scheme="http://www.lhb520.cn/tags/Mysql/"/>
    
  </entry>
  
  <entry>
    <title>MySQL主主复制原理及搭建</title>
    <link href="http://www.lhb520.cn/2017/12/28/MySQL%E4%B8%BB%E4%B8%BB%E5%A4%8D%E5%88%B6%E5%8E%9F%E7%90%86%E5%8F%8A%E6%90%AD%E5%BB%BA/"/>
    <id>http://www.lhb520.cn/2017/12/28/MySQL主主复制原理及搭建/</id>
    <published>2017-12-28T02:50:29.000Z</published>
    <updated>2017-12-28T03:36:19.319Z</updated>
    
    <content type="html"><![CDATA[<p>一、原理</p><blockquote><p>MySQL两台服务器上面的任何一个数据库发生改变，都会同步到另一台服务器上面去。</p></blockquote><p>二、环境搭建</p><a id="more"></a><blockquote><p>主数据库1(master1)：172.25.0.254<br>主数据库2(master2)：172.25.0.11<br>操作系统：RHRL7<br>MySQL版本：mariadb-5.5.35</p></blockquote><p>安装MYSQL(yum源安装)</p><p>master1</p><blockquote><p>[root@master1 ~]# yum clean all<br>[root@master1 ~]# yum -y install mariadb*</p></blockquote><p>master2</p><blockquote><p>[root@master2 ~]# yum clean all<br>[root@master2 ~]# yum -y install mariadb*</p></blockquote><p>开启mariadb服务</p><blockquote><p>[root@master1 ~]# systemctl start mariadb<br>[root@master2 ~]# systemctl start mariadb</p></blockquote><p>关闭防火墙（或者开发防火墙的mysql服务和3306端口）</p><blockquote><p>[root@master1 ~]# systemctl stop firewalld.service<br>[root@master2 ~]# systemctl stop firewalld.service</p></blockquote><p>三.配置方法</p><p>master1<br>修改主库my.cnf主要设置个不一样的ID，以及同步的数据库的名字和端口号</p><blockquote><p>[root@master1 ~]# vim /etc/my.cnf<br>server-id=1<br>log-bin=lhb<br>port=3306</p></blockquote><p>重启服务使配置生效</p><blockquote><p>[root@master1 ~]# systemctl restart mariadb</p></blockquote><p>登录主库赋予从库权限账号，允许用户在主库上读取日志(用户名：admin，密码：123456）</p><blockquote><p>[root@master1 ~]# mysql -uroot -p123456<br>MariaDB [(none)]&gt; grant replication slave on <em>.</em> to ‘admin’@’172.25.0.11’ identified by ‘123456’;</p></blockquote><p>我们可以在master2的主机上用命令作如下去验证下是否可以进入master1的MySQL</p><blockquote><p>[root@master2 ~]# mysql -uadmin -p’123456’ -h 172.25.0.254</p></blockquote><p>显示主数据看的信息</p><blockquote><p>MariaDB [(none)]&gt; show master status;<br>    +————+———-+————–+——————+<br>    | File       | Position | Binlog_Do_DB | Binlog_Ignore_DB |<br>    +————+———-+————–+——————+<br>    | lhb.000002 |      245 |              |                  |<br>    +————+———-+————–+——————+<br>    1 row in set (0.00 sec)</p></blockquote><p>设置同步</p><blockquote><p>MariaDB [(none)]&gt; slave stop;<br>    Query OK, 0 rows affected, 1 warning (0.00 sec)<br>MariaDB [(none)]&gt; change master to master_host=’172.25.0.11’,master_user=’admin’,master_password=’123456’,master_log_file=’lhb.000002’,master_log_pos=245;<br>    Query OK, 0 rows affected (0.03 sec)<br>master2</p></blockquote><p>修改主库my.cnf主要设置个不一样的ID，以及同步的数据库的名字和端口号</p><blockquote><p>[root@master2 ~]# vim /etc/my.cnf<br>server-id=2<br>log-bin=lhb<br>port=3306</p></blockquote><p>重启服务使配置生效</p><blockquote><p>[root@master2 ~]# systemctl restart mariadb</p></blockquote><p>登录主库赋予从库权限账号，允许用户在主库上读取日志(用户名：admin，密码：123456）</p><blockquote><p>[root@master2 ~]# mysql -uroot -p123456<br>MariaDB [(none)]&gt; grant replication slave on <em>.</em> to ‘admin’@’172.25.0.254’ identified by ‘123456’;</p></blockquote><p>我们可以在master1的主机上用命令作如下去验证下是否可以进入master1的MySQL</p><blockquote><p>[root@master1 ~]# mysql -uadmin -p’123456’ -h 172.25.0.11</p></blockquote><p>显示主数据看的信息</p><blockquote><p>MariaDB [(none)]&gt; show master status;<br>    +————+———-+————–+——————+<br>    | File       | Position | Binlog_Do_DB | Binlog_Ignore_DB |<br>    +————+———-+————–+——————+<br>    | lhb.000002 |      245 |              |                  |<br>    +————+———-+————–+——————+<br>    1 row in set (0.00 sec)</p></blockquote><p>设置同步</p><blockquote><p>MariaDB [(none)]&gt; slave stop；<br>    MariaDB [(none)]&gt; change master to master_host=’172.25.0.254’,master_user=’admin’,master_password=’123456’,master_log_file=’lhb.000002’,master_log_pos=245;<br>在master1 和master2 两个主机同时敲下<br>MariaDB [(none)]&gt; slave start；</p></blockquote><p>查看是否成功</p><blockquote><p>MariaDB [(none)]&gt; show slave status\G;<br>Slave_IO_Running: Yes<br>Slave_SQL_Running: Yes<br>两个为Yes表示成功（两台主机都需要查看）</p></blockquote><p>测试：在master1建立lhbdb的数据库，看看在master2是否会同步</p><p>master1</p><blockquote><p>MariaDB [(none)]&gt; create database lhbdb;<br>    Query OK, 1 row affected (0.00 sec)<br>    MariaDB [(none)]&gt; show databases;<br>    +——————–+<br>    | Database           |<br>    +——————–+<br>    | information_schema |<br>    | lhbdb              |<br>    | mysql              |<br>    | performance_schema |<br>    | test               |<br>    +——————–+<br>    5 rows in set (0.01 sec)</p></blockquote><p>master2</p><blockquote><p>MariaDB [(none)]&gt; show databases;<br>    +——————–+<br>    | Database           |<br>    +——————–+<br>    | information_schema |<br>    | lhbdb              |<br>    | mysql              |<br>    | performance_schema |<br>    | test               |<br>    +——————–+<br>    5 rows in set (0.01 sec)</p></blockquote><p>由此可以看到master2 能够到看lhbdb的数据库，表示MySQL主主搭建成功^<em>^^</em>^^_^!!!</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;一、原理&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;MySQL两台服务器上面的任何一个数据库发生改变，都会同步到另一台服务器上面去。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;二、环境搭建&lt;/p&gt;
    
    </summary>
    
    
      <category term="Mysql" scheme="http://www.lhb520.cn/tags/Mysql/"/>
    
  </entry>
  
  <entry>
    <title>解决Vwmare14出现黑屏问题</title>
    <link href="http://www.lhb520.cn/2017/12/24/%E8%A7%A3%E5%86%B3Vwmare14%E5%87%BA%E7%8E%B0%E9%BB%91%E5%B1%8F%E9%97%AE%E9%A2%98/"/>
    <id>http://www.lhb520.cn/2017/12/24/解决Vwmare14出现黑屏问题/</id>
    <published>2017-12-24T12:22:29.000Z</published>
    <updated>2017-12-28T02:46:45.955Z</updated>
    
    <content type="html"><![CDATA[<p>在我们下载完Vwmare14，启动vwmare时出现黑屏现象</p><p>解决方法：修复LSP</p><a id="more"></a><blockquote><p>命令行窗口—输入netsh winsock reset<br>点击确定后重新启动下计算机就可以了</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在我们下载完Vwmare14，启动vwmare时出现黑屏现象&lt;/p&gt;
&lt;p&gt;解决方法：修复LSP&lt;/p&gt;
    
    </summary>
    
    
      <category term="Vwmare" scheme="http://www.lhb520.cn/tags/Vwmare/"/>
    
  </entry>
  
  <entry>
    <title>Linux下安装Python</title>
    <link href="http://www.lhb520.cn/2017/12/24/Linux%E4%B8%8B%E5%AE%89%E8%A3%85Python/"/>
    <id>http://www.lhb520.cn/2017/12/24/Linux下安装Python/</id>
    <published>2017-12-24T12:17:58.000Z</published>
    <updated>2017-12-28T02:30:30.330Z</updated>
    
    <content type="html"><![CDATA[<p>1.下载python压缩包(这里这的是python2.7版本)</p><blockquote><p>wget   <a href="https://www.python.org/ftp/pthon/2.7.11/Python-2.7.11.tgz" target="_blank" rel="noopener">https://www.python.org/ftp/pthon/2.7.11/Python-2.7.11.tgz</a></p></blockquote><a id="more"></a><p>2.解压python压缩包</p><blockquote><p>tar  -xvf Python-2.7.11.tgz</p></blockquote><p>3.编辑文件包并编译源码包</p><blockquote><p>cdPython-2.7.11<br>  ./configure<br>make<br>make install</p></blockquote><p>4.创建软链接</p><blockquote><p>cd /usr/bin/<br>rm -rf python<br>ln -s /usr/local/Python-x.x.x/bin/python ./python</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;1.下载python压缩包(这里这的是python2.7版本)&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;wget   &lt;a href=&quot;https://www.python.org/ftp/pthon/2.7.11/Python-2.7.11.tgz&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.python.org/ftp/pthon/2.7.11/Python-2.7.11.tgz&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="Python" scheme="http://www.lhb520.cn/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>linux下MySql命令</title>
    <link href="http://www.lhb520.cn/2017/12/24/linux%E4%B8%8BMySql%E5%91%BD%E4%BB%A4/"/>
    <id>http://www.lhb520.cn/2017/12/24/linux下MySql命令/</id>
    <published>2017-12-24T12:10:01.000Z</published>
    <updated>2017-12-28T02:47:19.653Z</updated>
    
    <content type="html"><![CDATA[<p>1.显示数据库</p><blockquote><p>show databases;</p></blockquote><p>2.选择数据库</p><blockquote><p>use 数据库名；<br><a id="more"></a><br>3.显示数据库中的表<br>show tables；</p></blockquote><p>4.显示数据表的结构</p><blockquote><p>desc 表名；</p></blockquote><p>5.显示表中记录</p><blockquote><p>select * from 表名；</p></blockquote><p>6.建库</p><blockquote><p>create databases 库民；</p></blockquote><p>7.建表</p><blockquote><p>Create table 表名（字段设定列表）</p><p>例子：mysql&gt; create table student(<br>   -&gt; id int auto_increment not null primary key ,<br>   -&gt; name char(8),<br>   -&gt; set char(2),<br>           -&gt; birthday date );<br>      Query OK, 0 rows affected (0.03 sec)</p></blockquote><p>8.修改编码</p><blockquote><p>alter table table_name convert to character set utf8;</p></blockquote><p>9.增加记录</p><blockquote><p>insert into name(uname,gender,birthday) values(‘张三’,’男’,’1971-10-01’);</p></blockquote><p>10.修改记录</p><blockquote><p>update name set birthday=’1971-01-10’ where uname=’张三’;</p></blockquote><p>11.删除记录</p><blockquote><p>delete from name where uname=’张三’；</p></blockquote><p>12.删除表 </p><blockquote><p>drop table 表名；</p></blockquote><p>13.删除库</p><blockquote><p>drop databases 库名；</p></blockquote><p>14.备份数据库</p><blockquote><p>mysqldump -u root -p 数据库名&gt;备份文件——–输入数据库的密码</p></blockquote><p>15.恢复数据库</p><blockquote><p>mysql -u root -p 数据库名 &lt; 备份名 —-&gt;恢复时数据库必须存在，可以为空数据库；<br>或<br>进入数据库—–&gt;创建数据库名—–&gt;source   要导入的数据库文件<br>例如：mysql  -uroot -ppassword—–&gt;use name;——–&gt;source  name.db</p></blockquote><p>16.备份数据库中的表</p><blockquote><p>mysqldump -u root -p –opt 数据库名 表名 &lt; 备份文件；</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;1.显示数据库&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;show databases;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;2.选择数据库&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;use 数据库名；&lt;br&gt;
    
    </summary>
    
    
      <category term="Mysql" scheme="http://www.lhb520.cn/tags/Mysql/"/>
    
  </entry>
  
  <entry>
    <title>Redhat快速安装LAMP和WordPress</title>
    <link href="http://www.lhb520.cn/2017/12/24/Redhat%E5%BF%AB%E9%80%9F%E5%AE%89%E8%A3%85LAMP%E5%92%8CWordPress/"/>
    <id>http://www.lhb520.cn/2017/12/24/Redhat快速安装LAMP和WordPress/</id>
    <published>2017-12-24T11:59:55.000Z</published>
    <updated>2017-12-28T02:48:27.838Z</updated>
    
    <content type="html"><![CDATA[<p>####一、安装环境</p><blockquote><p>[root@lin_haobin ~]# more /etc/redhat-release<br>Red Hat Enterprise Linux Server release 7.0 (Maipo)<br><a id="more"></a></p><p>####二、基于yum方式安装httpd、php、mariadb</p><p>[root@lin_haobin ~]# yum -y install httpd<br>[root@lin_haobin ~]# yum -y install mariadb-server<br>[root@lin_haobin ~]# yum -y install php  php-mysql</p></blockquote><p>#####验证安装包</p><blockquote><p>[root@lin_haobin ~]# rpm -qa|grep httpd<br>httpd-2.4.6-17.el7.x86_64<br>httpd-tools-2.4.6-17.el7.x86_64</p><p>[root@lin_haobin ~]# rpm -qa|grep php<br>php-pdo-5.4.16-21.el7.x86_64<br>php-common-5.4.16-21.el7.x86_64<br>php-mysql-5.4.16-21.el7.x86_64<br>php-5.4.16-21.el7.x86_64<br>php-cli-5.4.16-21.el7.x86_64</p><p>[root@lin_haobin ~]# rpm -qa|grep maria<br>mariadb-5.5.35-3.el7.x86_64<br>mariadb-server-5.5.35-3.el7.x86_64<br>mariadb-libs-5.5.35-3.el7.x86_64</p></blockquote><p>启动httpd</p><blockquote><p>[root@lin_haobin ~]# systemctl start httpd</p></blockquote><p>验证httpd</p><blockquote><p>[root@lin_haobin ~]# echo “The httpd is running.”&gt;/var/www/html/index.html</p></blockquote><p>在浏览器输入<a href="http://localhost" target="_blank" rel="noopener">http://localhost</a>    出现下面的页面则说明httpd安装成功<br><img src="http://img.blog.csdn.net/20171211211504783?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvTGluX2hhb2Jpbg==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p><p>启动mariadb</p><blockquote><p>[root@lin_haobin ~]# systemctl start mariadb</p></blockquote><p>验证mariadb</p><blockquote><p>[root@lin_haobin ~]# mysql<br>Welcome to the MariaDB monitor.  Commands end with ; or \g.<br>Your MariaDB connection id is 2<br>Server version: 5.5.35-MariaDB MariaDB Server</p><p>Copyright (c) 2000, 2013, Oracle, Monty Program Ab and others.</p><p>Type ‘help;’ or ‘\h’ for help. Type ‘\c’ to clear the current input statement.</p><p>MariaDB [(none)]&gt; show variables like ‘version’;<br>+—————+—————-+<br>| Variable_name | Value          |<br>+—————+—————-+<br>| version       | 5.5.35-MariaDB |<br>+—————+—————-+<br>1 row in set (0.01 sec)</p><p>MariaDB [(none)]&gt; exit<br>Bye</p></blockquote><p>测试php</p><blockquote><p>[root@lin_haobin ~]# echo “<br>The PHP is running.<br>?php<br>phpinfo();<br>?&gt;<br>“&gt;/var/www/html/index.php </p></blockquote><p>在浏览器输入<a href="http://localhost/index.php出现下面的页面则说明php安装成功" target="_blank" rel="noopener">http://localhost/index.php出现下面的页面则说明php安装成功</a></p><p><img src="http://img.blog.csdn.net/20171211212348203?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvTGluX2hhb2Jpbg==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p><p>###三、安装及配置Wordpress</p><p>将WordPress上传到服务器</p><blockquote><p>[root@lin_haobin Desktop]# ll<br>total 9032<br>-rw-r–r–. 1 root root 9245300 Dec 11 16:04 wordpress-4.7.4-zh_CN.zip</p></blockquote><p>解压WordPress，并解压到/var/www/html/目录下,并配置</p><blockquote><p>[root@lin_haobin Desktop]# unzip -q wordpress-4.7.4-zh_CN.zip -d /var/www/html/<br>[root@lin_haobin Desktop]# cp /var/www/html/wordpress/wp-config-sample.php /var/www/html/wordpress/wp-config.php<br>[root@lin_haobin Desktop]# vim /var/www/html/wordpress/wp-config.php<br>/<em>* WordPress数据库的名称 </em>/</p><p>define(‘DB_NAME’, ‘wordpress’);</p><p>/<em>* MySQL数据库用户名 </em>/</p></blockquote><p>define(‘DB_USER’, ‘admin’);</p><blockquote><p>/<em>* MySQL数据库密码 </em>/</p></blockquote><p>define(‘DB_PASSWORD’, ‘admin’);</p><blockquote><p>/<em>* MySQL主机 </em>/</p></blockquote><p>define(‘DB_HOST’, ‘localhost’);</p><blockquote><p>/<em>* 创建数据表时默认的文字编码 </em>/</p></blockquote><p>define(‘DB_CHARSET’, ‘utf8’);</p><blockquote><p>/<em>* 数据库整理类型。如不确定请勿更改 </em>/</p></blockquote><p>define(‘DB_COLLATE’, ‘’);</p><p>创建wordpress数据库及用户</p><blockquote><p>[root@lin_haobin Desktop]#mysql<br>MariaDB [(none)]&gt; create database wordpress character set utf8;<br>Query OK, 1 row affected (0.00 sec)</p><p>MariaDB [(none)]&gt; grant all privileges on wordpress.* to ‘admin’@’localhost’ identified by ‘admin’;<br>Query OK, 0 rows affected (0.00 sec)</p><p>MariaDB [(none)]&gt; flush privileges;<br>Query OK, 0 rows affected (0.00 sec)</p></blockquote><p>####配置wordpress</p><p>打开浏览器完成wordpress配置<br>在浏览器输入<a href="http://localhost/wordpress" target="_blank" rel="noopener">http://localhost/wordpress</a></p><p><img src="http://img.blog.csdn.net/20171211213011298?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvTGluX2hhb2Jpbg==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p><p>填写信息，点击安装WordPress</p><p><img src="http://img.blog.csdn.net/20171211213227798?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvTGluX2hhb2Jpbg==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p><p>输入密码，点击登录</p><p><img src="http://img.blog.csdn.net/20171211213333821?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvTGluX2hhb2Jpbg==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p><p><img src="http://img.blog.csdn.net/20171211213353074?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvTGluX2hhb2Jpbg==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p><p>出现上面的页面证明WordPress已经安装完成了。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;####一、安装环境&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;[root@lin_haobin ~]# more /etc/redhat-release&lt;br&gt;Red Hat Enterprise Linux Server release 7.0 (Maipo)&lt;br&gt;
    
    </summary>
    
    
      <category term="redhat" scheme="http://www.lhb520.cn/tags/redhat/"/>
    
  </entry>
  
  <entry>
    <title>搭建Apache虚拟目录</title>
    <link href="http://www.lhb520.cn/2017/12/24/%E6%90%AD%E5%BB%BAApache%E8%99%9A%E6%8B%9F%E7%9B%AE%E5%BD%95/"/>
    <id>http://www.lhb520.cn/2017/12/24/搭建Apache虚拟目录/</id>
    <published>2017-12-24T11:41:40.000Z</published>
    <updated>2017-12-28T02:49:17.229Z</updated>
    
    <content type="html"><![CDATA[<p>####搭建过程<br>1.验证Apache</p><blockquote><p>[root@localhost /]# echo “this is a html “ &gt; /var/www/html/index.html</p></blockquote><a id="more"></a><p>出现下面的页面说明安装成功</p><p><img src="http://img.blog.csdn.net/20171216170835230?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvTGluX2hhb2Jpbg==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p><p>2.配置Apache文件</p><blockquote><p>[root@localhost /]# cd /etc/httpd/conf<br>[root@localhost conf]# touch xunni.conf     //必须.conf结尾</p></blockquote><p>添加下面文件内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;VirtualHost *:80&gt;</span><br><span class="line">Alias /data1 &quot;/data1/&quot;</span><br><span class="line">&lt;Directory &quot;/data1/&quot;&gt;</span><br><span class="line">Options +Indexes +FollowSymlinks</span><br><span class="line">AllowOverride All</span><br><span class="line">Require all granted</span><br><span class="line">&lt;/Directory&gt;</span><br><span class="line">&lt;/VirtualHost&gt;</span><br></pre></td></tr></table></figure><p>3.创建虚拟目录</p><blockquote><p>[root@localhost conf]# cd /var/www/html/<br>[root@localhost html]# mkdir data1       //必须与apache配置文件同名<br>[root@localhost html]# echo “this is a data1” &gt; index.html</p></blockquote><p>在浏览器输入<a href="http://ip地址/data1" target="_blank" rel="noopener">http://ip地址/data1</a></p><p><img src="http://img.blog.csdn.net/20171216171731433?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvTGluX2hhb2Jpbg==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;####搭建过程&lt;br&gt;1.验证Apache&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;[root@localhost /]# echo “this is a html “ &amp;gt; /var/www/html/index.html&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="linux" scheme="http://www.lhb520.cn/tags/linux/"/>
    
  </entry>
  
</feed>
